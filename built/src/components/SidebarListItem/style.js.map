{"version":3,"file":"style.js","sourceRoot":"","sources":["../../../../src/components/SidebarListItem/style.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,mBAAmB,CAAA;AACtC,OAAO,EACL,cAAc,EACd,UAAU,EACV,WAAW,EACX,IAAI,EACJ,QAAQ,EACR,IAAI,GACL,MAAM,iBAAiB,CAAA;AACxB,OAAO,IAAI,MAAM,cAAc,CAAA;AAE/B,MAAM,CAAC,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAA;;;;;;;;;WASrB,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC;CACzD,CAAA;AAED,MAAM,CAAC,MAAM,iBAAiB,GAAG,MAAM,CAAC,GAAG,CAAA;;;;;;;CAO1C,CAAA;AAED,MAAM,CAAC,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAA;;;;;;;WAOtB,QAAQ;CAClB,CAAA;AAED,MAAM,CAAC,MAAM,cAAc,GAAG,MAAM,CAAC,GAAG,CAAA;;;;;;;CAOvC,CAAA;AAED,MAAM,CAAC,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,CAAA;eACxB,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;iBAC1C,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;iBAC1C,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;WAClD,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC;CACzD,CAAA;AAED,MAAM,CAAC,MAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAA;;;;;;;;YAQ5B,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;;CAEpD,CAAA;AAED,MAAM,CAAC,MAAM,UAAU,GAAG,MAAM,CAAC,EAAE,CAAA;;;;;;;sBAOb,CAAC,KAAK,EAAE,EAAE,CAC5B,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,aAAa;;;wBAG3B,CAAC,KAAK,EAAE,EAAE,CAC5B,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,WAAW;;MAE7C,KAAK,KAAK,WAAW;eACZ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC;;;MAGxD,aAAa;cACL,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;;;CAGtD,CAAA;AAED,MAAM,CAAC,MAAM,kBAAkB,GAAG,MAAM,CAAC,aAAa,CAAC,CAAA;;;YAG3C,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC;;CAE9D,CAAA","sourcesContent":["import styled from 'styled-components'\nimport {\n  blueLightest50,\n  grayDarker,\n  grayLight50,\n  gray,\n  grayDark,\n  blue,\n} from '../style/colors'\nimport Text from '../Text/Text'\n\nexport const Badge = styled.span`\n  margin-left: auto;\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 12px;\n  line-height: 14px;\n  text-align: right;\n  margin-right: 8px;\n  color: ${(props) => (props.selected ? blue : grayDarker)};\n`\n\nexport const NameHandleWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 16px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`\n\nexport const Handle = styled.span`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 14px;\n  letter-spacing: -0.2px;\n  color: ${grayDark};\n`\n\nexport const LabelContainer = styled.div`\n  display: flex;\n  align-items: center;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  margin-right: 8px;\n`\n\nexport const LabelStyled = styled(Text)`\n  font-size: ${(props) => (props.hasUser ? '13px' : '15px')};\n  font-weight: ${(props) => (props.hasUser ? '500' : '700')};\n  line-height: ${(props) => (props.hasUser ? '20px' : '24px')};\n  color: ${(props) => (props.selected ? blue : grayDarker)};\n`\n\nexport const IconContainer = styled.span`\n  margin-right: 8px;\n  display: inline-block;\n  height: 16px;\n  width: 16px;\n  display: flex;\n  justify-content: center;\n  svg {\n    fill: ${(props) => (props.selected ? blue : gray)};\n  }\n`\n\nexport const ItemStyled = styled.li`\n  list-style-type: none;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 4px;\n  padding: 8px 0 8px 8px;\n  background-color: ${(props) =>\n    props.selected ? blueLightest50 : 'transparent'};\n\n  &:hover {\n    background-color: ${(props) =>\n      props.selected ? blueLightest50 : grayLight50};\n\n    ${Badge}, ${LabelStyled} {\n      color: ${(props) => (props.selected ? blue : grayDarker)};\n    }\n\n    ${IconContainer} svg {\n      fill: ${(props) => (props.selected ? blue : gray)};\n    }\n  }\n`\n\nexport const BadgeIconContainer = styled(IconContainer)`\n  margin-left: auto;\n  svg {\n    fill: ${(props) => (props.selected ? gray : 'currentColor')};\n  }\n`\n"]}