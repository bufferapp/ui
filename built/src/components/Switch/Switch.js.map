{"version":3,"file":"Switch.js","sourceRoot":"","sources":["../../../../src/components/Switch/Switch.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,SAAS,MAAM,YAAY,CAAA;AAClC,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,SAAS,CAAA;AACzD,OAAO,IAAI,MAAM,cAAc,CAAA;AAG/B,MAAM,MAAM,GAAG,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAC9D,oBAAC,SAAS;IACR,oBAAC,IAAI,IAAC,OAAO,EAAE,EAAE,EAAE,IAAI,EAAC,OAAO,IAC5B,KAAK,CACD;IACP,oBAAC,OAAO;QACN,oBAAC,KAAK,IACJ,OAAO,EAAE,IAAI,EACb,QAAQ,EAAE,YAAY,EACtB,EAAE,EAAE,EAAE,EACN,IAAI,EAAC,UAAU,EACf,IAAI,EAAC,QAAQ,kBACC,IAAI,mBACH,QAAQ,EACvB,QAAQ,EAAE,QAAQ,GAClB;QACF,oBAAC,IAAI,mBAAa,MAAM,GAAG,CACnB,CACA,CACb,CAAA;AAED,MAAM,CAAC,SAAS,GAAG;IAEjB,KAAK,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;IAElC,IAAI,EAAE,SAAS,CAAC,IAAI;IAEpB,EAAE,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;IAE/B,QAAQ,EAAE,SAAS,CAAC,IAAI;IAExB,YAAY,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU;CACxC,CAAA;AAED,MAAM,CAAC,YAAY,GAAG;IACpB,QAAQ,EAAE,KAAK;IACf,IAAI,EAAE,KAAK;CACZ,CAAA;AAED,eAAe,MAAM,CAAA","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Input, Span, Wrapper, Container } from './style'\nimport Text from '../Text/Text'\n\n// @ts-expect-error TS(7031) FIXME: Binding element 'label' implicitly has an 'any' ty... Remove this comment to see the full error message\nconst Switch = ({ label, id, disabled, handleSwitch, isOn }) => (\n  <Container>\n    <Text htmlFor={id} type=\"label\">\n      {label}\n    </Text>\n    <Wrapper>\n      <Input\n        checked={isOn}\n        onChange={handleSwitch}\n        id={id}\n        type=\"checkbox\"\n        role=\"switch\"\n        aria-checked={isOn}\n        aria-readonly={disabled}\n        disabled={disabled}\n      />\n      <Span aria-hidden=\"true\" />\n    </Wrapper>\n  </Container>\n)\n\nSwitch.propTypes = {\n  /** It adds a label to the left of the switch. */\n  label: PropTypes.string.isRequired,\n  /** The value for whether the switch is on or off */\n  isOn: PropTypes.bool,\n  /** The id for the label and input */\n  id: PropTypes.string.isRequired,\n  /** It removes pointer and changes it to readonly */\n  disabled: PropTypes.bool,\n  /** It changes the checked value of the switch */\n  handleSwitch: PropTypes.func.isRequired,\n}\n\nSwitch.defaultProps = {\n  disabled: false,\n  isOn: false,\n}\n\nexport default Switch\n"]}