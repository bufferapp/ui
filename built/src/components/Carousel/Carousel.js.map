{"version":3,"file":"Carousel.js","sourceRoot":"","sources":["../../../../src/components/Carousel/Carousel.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { css } from 'styled-components'\nimport Button from '../Button/index'\nimport ArrowRight from '../Icon/Icons/ArrowRight'\nimport ArrowLeft from '../Icon/Icons/ArrowLeft'\nimport CarouselItems from './CarouselItems'\nimport { gray, white } from '../style/colors'\nimport { easeOutQuart } from '../style/animations'\n\nconst CarouselStyled = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst Window = styled.div`\n  overflow: hidden;\n  width: ${(props) => props.width};\n  margin: 8px;\n  display: flex;\n`\n\nconst ButtonOverlapContainer = styled.div`\n  position: relative;\n  z-index: 3;\n\n  ${(props) =>\n    props.left\n      ? css`\n          left: 20px;\n        `\n      : css`\n          right: 20px;\n        `}\n`\n\nconst MainList = styled.ul`\n  display: flex;\n  padding: 0;\n  margin: 0;\n  position: relative;\n  left: ${(props) => `${props.left}px`};\n  transition: left 0.4s ${easeOutQuart};\n`\n\n// grabbed these styles from https://a11yproject.com/posts/how-to-hide-content/\nconst Announcement = styled.div`\n  position: absolute !important;\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n  clip-path: inset(1px 1px 1px 1px);\n  white-space: nowrap; /* added line */\n  margin: 0;\n`\n\nconst IndicatorList = styled.ol`\n  padding: 0;\n  margin: 0;\n  display: flex;\n  justify-content: center;\n`\n\nconst IndicatorListItem = styled.li`\n  list-style: none;\n  padding: 0 4px;\n  position: relative;\n  display: flex;\n`\n\nconst IndicatorButton = styled.button`\n  width: 11px;\n  height: 11px;\n  padding: 0;\n  border: none;\n  border-radius: 50%;\n  background-color: ${gray};\n\n  :hover {\n    cursor: pointer;\n  }\n\n  &:after {\n    content: '';\n    display: block;\n    width: 11px;\n    height: 11px;\n    border-radius: 50%;\n    background: ${white};\n    position: absolute;\n    top: 0;\n    left: 4px;\n    transform: ${({ active }) => (active ? 'scale(1)' : 'scale(0)')};\n    transition: transform ${({ active }) => (active ? '250ms' : '150ms')}\n      ease-out;\n  }\n\n  &:before {\n    content: '';\n    display: block;\n    width: 13px;\n    height: 13px;\n    border-radius: 50%;\n    border: 1px solid ${white};\n    position: absolute;\n    top: 0;\n    left: 2px;\n    opacity: 0;\n    transition: opacity 100ms ease-out;\n    transition-delay: ${({ active }) => (active ? '0' : '150ms')};\n  }\n\n  &:hover {\n    &:after {\n      transform: scale(1);\n    }\n    &:before {\n      opacity: 1;\n    }\n  }\n`\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nclass Carousel extends React.Component {\n  state = {\n    left: 0,\n    currentSlideIndex: 0,\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'lengthOfChildren' implicitly has an 'an... Remove this comment to see the full error message\n  verifyLastItem = (lengthOfChildren, widthOfEachItem) => {\n    const { left } = this.state\n    const finalLength = (lengthOfChildren - 1) * parseInt(widthOfEachItem, 10)\n\n    return left === -finalLength\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'index' implicitly has an 'any' type.\n  goToSlide = (index) => {\n    // @ts-expect-error TS(2339) FIXME: Property 'width' does not exist on type 'Readonly<... Remove this comment to see the full error message\n    const { width, children } = this.props\n    const { currentSlideIndex, left } = this.state\n\n    // going backwards\n    if (currentSlideIndex > index) {\n      // if it's the first slide, loop back to the last one\n      if (left === 0) {\n        const finalLength =\n          (React.Children.count(children) - 1) * parseInt(width, 10)\n        this.setState({\n          left: -finalLength,\n          currentSlideIndex: React.Children.count(children) - 1,\n        })\n        return\n      }\n    }\n\n    // going forwards\n    if (currentSlideIndex < index) {\n      // if it's the last slide, loop back to the first one\n      if (this.verifyLastItem(React.Children.count(children), width)) {\n        this.setState({\n          left: 0,\n          currentSlideIndex: 0,\n        })\n        return\n      }\n    }\n\n    const newLeft = parseInt(width, 10) * index\n    this.setState({\n      left: -newLeft,\n      currentSlideIndex: index,\n    })\n  }\n\n  render() {\n    const { left, currentSlideIndex } = this.state\n    // @ts-expect-error TS(2339) FIXME: Property 'width' does not exist on type 'Readonly<... Remove this comment to see the full error message\n    const { children, width, rightNavigation, withIndicators } = this.props\n\n    return (\n      <CarouselStyled>\n        {/* this announcement is hidden but notifies screen reader users when the slide has changed */}\n        <Announcement aria-live=\"polite\" aria-atomic=\"true\" tabIndex={-1}>\n          Slide\n          {currentSlideIndex + 1}\n          out of\n          {/* @ts-expect-error TS(2533) FIXME: Object is possibly 'null' or 'undefined'. */}\n          {children.length}\n        </Announcement>\n        {React.Children.count(children) > 1 && !rightNavigation && (\n          <ButtonOverlapContainer left>\n            {/* @ts-expect-error TS(2740) FIXME: Type '{ type: string; icon: Element; hasIconOnly: ... Remove this comment to see the full error message */}\n            <Button\n              type=\"secondary\"\n              icon={<ArrowLeft />}\n              hasIconOnly\n              onClick={() => {\n                this.goToSlide(currentSlideIndex - 1)\n              }}\n              label=\"Backwards\"\n            />\n          </ButtonOverlapContainer>\n        )}\n        <Content>\n          <Window width={width}>\n            <MainList left={left}>\n              <CarouselItems currentSlideIndex={currentSlideIndex}>\n                {/* @ts-expect-error TS(2322) FIXME: Type 'ReactNode' is not assignable to type 'string... Remove this comment to see the full error message */}\n                {children}\n              </CarouselItems>\n            </MainList>\n          </Window>\n          {React.Children.count(children) > 1 && withIndicators && (\n            <IndicatorList>\n              {React.Children.map(children, (child, index) => (\n                <IndicatorListItem key={index}>\n                  <IndicatorButton\n                    type=\"button\"\n                    onClick={() => this.goToSlide(index)}\n                    active={index === currentSlideIndex}\n                  >\n                    <Announcement as=\"p\">\n                      {index === currentSlideIndex\n                        ? `Currently on slide\n                    ${index + 1}`\n                        : `Go to slide ${index + 1}`}\n                    </Announcement>\n                  </IndicatorButton>\n                </IndicatorListItem>\n              ))}\n            </IndicatorList>\n          )}\n        </Content>\n        {React.Children.count(children) > 1 && (\n          <ButtonOverlapContainer>\n            {/* @ts-expect-error TS(2740) FIXME: Type '{ type: string; icon: Element; hasIconOnly: ... Remove this comment to see the full error message */}\n            <Button\n              type=\"secondary\"\n              icon={<ArrowRight />}\n              hasIconOnly\n              onClick={() => {\n                this.goToSlide(currentSlideIndex + 1)\n              }}\n              label=\"Forwards\"\n            />\n          </ButtonOverlapContainer>\n        )}\n      </CarouselStyled>\n    )\n  }\n}\n\n// @ts-expect-error TS(2339) FIXME: Property 'defaultProps' does not exist on type 'ty... Remove this comment to see the full error message\nCarousel.defaultProps = {\n  rightNavigation: false,\n  withIndicators: true,\n}\n\n// @ts-expect-error TS(2339) FIXME: Property 'propTypes' does not exist on type 'typeo... Remove this comment to see the full error message\nCarousel.propTypes = {\n  /** The content within the carousel */\n  children: PropTypes.node.isRequired,\n\n  /** The normalized width for each item */\n  width: PropTypes.string.isRequired,\n\n  /** Option to only navigate towards the right */\n  rightNavigation: PropTypes.bool,\n\n  /** Show indicators at the bottom */\n  withIndicators: PropTypes.bool,\n}\n\nexport default Carousel\n"]}