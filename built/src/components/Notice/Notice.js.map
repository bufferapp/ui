{"version":3,"file":"Notice.js","sourceRoot":"","sources":["../../../../src/components/Notice/Notice.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { borderRadius } from '../style/borders'\nimport { fontSize } from '../style/fonts'\nimport Warning from '../Icon/Icons/Warning'\nimport Cross from '../Icon/Icons/Cross'\nimport Buffer from '../Icon/Icons/Buffer'\nimport {\n  grayDark,\n  grayLighter,\n  grayDarker,\n  redLightest,\n  redDark,\n  redDarker,\n  purpleDark,\n  purpleLightest,\n  purpleDarker,\n  yellowLightest,\n  yellowDark,\n  yellowDarker,\n} from '../style/colors'\nimport { useAnimation } from '../AnimationWrapper'\nimport { stageInRight, fadeOut } from '../style/animations'\n\nconst colorMap = {\n  alert: {\n    border: redDark,\n    background: redLightest,\n    color: redDarker,\n  },\n  warning: {\n    border: yellowDark,\n    background: yellowLightest,\n    color: yellowDarker,\n  },\n  note: {\n    border: grayDark,\n    background: grayLighter,\n    color: grayDarker,\n  },\n  tip: {\n    border: purpleDark,\n    background: purpleLightest,\n    color: purpleDarker,\n  },\n}\n\nconst NoticeWrapper = styled.div`\n  border: ${(props) => `1px solid ${  \n// @ts-expect-error TS(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\ncolorMap[props.type].border}`};\n  color: ${(props) =>  \n// @ts-expect-error TS(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n colorMap[props.type].color};\n  background: ${(props) =>  \n// @ts-expect-error TS(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n colorMap[props.type].background};\n  border-radius: ${borderRadius};\n  font-size: ${fontSize};\n  padding: 8px ${({ dismiss }) => (dismiss ? '28px' : '8px')} 8px 8px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  position: relative;\n  width: 100%;\n`\n\nconst WarningIcon = styled(Warning)`\n  display: block;\n  margin-right: 12px;\n  flex: 1 0 auto;\n  max-width: 16px;\n`\n\nconst BufferIcon = styled(Buffer)`\n  display: block;\n  margin-right: 12px;\n  flex: 1 0 auto;\n  max-width: 16px;\n`\n\nconst CloseButton = styled.button`\n  color: ${(props) =>  \n// @ts-expect-error TS(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n colorMap[props.type].color};\n  border: 0;\n  background: 0;\n  padding: 0;\n  margin: 0;\n  opacity: 0.8;\n  height: 16px;\n  position: absolute;\n  right: 16px;\n  &:hover {\n    color: ${(props) =>    \n// @ts-expect-error TS(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n colorMap[props.type].color};\n    opacity: 1;\n    cursor: pointer;\n  }\n`\n\n// @ts-expect-error TS(7031) FIXME: Binding element 'children' implicitly has an 'any'... Remove this comment to see the full error message\nfunction Notice({ children, dismiss, type, className, disableAnimation }) {\n  // We always need to wrap the Notice with AnimationWrapper because the dismiss function\n  // shows the Notice based on the dismissed property. If the animation is disabled the properties\n  // that control the animation are removed from animationProps.\n  const {\n    AnimationWrapper,\n    dismiss: dismissAnimationWrapper,\n    animationProps,\n  } = useAnimation({\n    justify: 'flex-end',\n    stageInAnimation: disableAnimation ? undefined : stageInRight,\n    stageOutAnimation: disableAnimation ? undefined : fadeOut,\n    onDismiss: dismiss,\n  })\n\n  const noticeContent = (\n    <NoticeWrapper type={type} dismiss={dismiss} className={className}>\n      {type === 'warning' && <WarningIcon />}\n      {type === 'alert' && <WarningIcon />}\n      {type === 'tip' && <BufferIcon />}\n      {children}\n      {dismiss && (\n        <CloseButton type={type} onClick={() => dismissAnimationWrapper()}>\n          <Cross />\n        </CloseButton>\n      )}\n    </NoticeWrapper>\n  )\n\n  return (\n    <AnimationWrapper {...animationProps}>{noticeContent}</AnimationWrapper>\n  )\n}\n\nNotice.propTypes = {\n  children: PropTypes.node.isRequired,\n  dismiss: PropTypes.func,\n  /** doesn't use animation wrapper if true */\n  disableAnimation: PropTypes.bool,\n  /** can be warning, note, alert, tip */\n  type: PropTypes.string.isRequired,\n}\n\nNotice.defaultProps = {\n  dismiss: null,\n  disableAnimation: false,\n}\n\nexport default Notice\n"]}