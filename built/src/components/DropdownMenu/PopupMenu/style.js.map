{"version":3,"file":"style.js","sourceRoot":"","sources":["../../../../../src/components/DropdownMenu/PopupMenu/style.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,mBAAmB,CAAA;AACtC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAA;AAE/E,MAAM,CAAC,MAAM,eAAe,GAAG,MAAM,CAAC,EAAE,CAAA;;;sBAGlB,IAAI;;gBAEV,UAAU;;;;;;aAMb,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC;;;;sBAIrC,KAAK;;;;;;;MAOrB,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC;;WAE7D,CAAC,KAAK,EAAE,EAAE;IACjB,MAAM,EAAE,SAAS,EAAE,GAAG,KAAK,CAAA;IAC3B,IAAI,SAAS,KAAK,OAAO;QAAE,OAAO,CAAC,CAAA;IACnC,OAAO,EAAE,CAAA;AACX,CAAC;UACO,CAAC,KAAK,EAAE,EAAE;IAChB,MAAM,EAAE,SAAS,EAAE,GAAG,KAAK,CAAA;IAC3B,IAAI,SAAS,KAAK,MAAM;QAAE,OAAO,CAAC,CAAA;IAClC,OAAO,EAAE,CAAA;AACX,CAAC;;;;2BAIwB,IAAI;;;;;;CAM9B,CAAA;AAED,MAAM,CAAC,MAAM,WAAW,GAAG,MAAM,CAAC,EAAE,CAAA;sBACd,WAAW;;;;;;;;gBAQjB,CAAC,KAAK,EAAE,EAAE,CACtB,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;CACtD,CAAA","sourcesContent":["import styled from 'styled-components'\nimport { blue, gray, white, grayShadow, grayLighter } from '../../style/colors'\n\nexport const PopupMenuStyled = styled.ul`\n  position: absolute;\n  z-index: 1000;\n  border: 1px solid ${gray};\n  box-sizing: border-box;\n  box-shadow: ${grayShadow};\n  border-radius: 4px;\n  max-height: calc(\n    100vh - 64px\n  ); /* 56px navbar + 8px margin-top. If someone needs to adjust this again, we might consider creating a prop and set this as the default value */\n  scroll: auto;\n  display: ${(props) => (props.isOpen ? 'initial' : 'none')};\n  min-width: 200px;\n  max-width: 200px;\n  width: 200px;\n  background-color: ${white};\n  top: 100%;\n  bottom: initial;\n  margin-bottom: 0;\n  margin-top: 8px;\n  padding: 8px 0;\n  transform: translateX(\n    ${(props) => (props.horizontalOffset ? props.horizontalOffset : '0')}\n  );\n  right: ${(props) => {\n    const { xPosition } = props\n    if (xPosition === 'right') return 0\n    return ''\n  }};\n  left: ${(props) => {\n    const { xPosition } = props\n    if (xPosition === 'left') return 0\n    return ''\n  }};\n\n  &[role='menu'] > li {\n    & button:focus {\n      outline: 1px solid ${blue};\n    }\n  }\n  &:focus {\n    outline: none;\n  }\n`\n\nexport const ItemDivider = styled.li`\n  background-color: ${grayLighter};\n  height: 1px;\n  margin-bottom: 8px;\n  margin-top: 8px;\n  padding: 0;\n  pointer-events: none;\n  width: 100%;\n  list-style: none;\n  margin-top: ${(props) =>\n    props.type && props.type === 'header' ? '15px' : ''};\n`\n"]}