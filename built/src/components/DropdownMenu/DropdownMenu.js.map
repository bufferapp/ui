{"version":3,"file":"DropdownMenu.js","sourceRoot":"","sources":["../../../../src/components/DropdownMenu/DropdownMenu.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/role-supports-aria-props */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { DropdownItems, Item } from './style'\nimport PopupMenu from './PopupMenu/PopupMenu'\nimport { keyCode } from './keyCode'\n\nexport default class DropdownMenu extends React.Component {\n  // @ts-expect-error TS(7006) FIXME: Parameter 'props' implicitly has an 'any' type.\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isOpen: false,\n      usingMouse: false,\n    }\n\n    // @ts-expect-error TS(2339) FIXME: Property 'keyCode' does not exist on type 'Dropdow... Remove this comment to see the full error message\n    this.keyCode = keyCode\n\n    this.handleKeydown = this.handleKeydown.bind(this)\n    this.handlePopupBlur = this.handlePopupBlur.bind(this)\n    this.handleMousedown = this.handleMousedown.bind(this)\n  }\n\n  componentDidMount() {\n    // @ts-expect-error TS(2339) FIXME: Property 'itemsNode' does not exist on type 'Dropd... Remove this comment to see the full error message\n    this.itemsNode.addEventListener('keydown', this.handleKeydown)\n    // @ts-expect-error TS(2339) FIXME: Property 'itemsNode' does not exist on type 'Dropd... Remove this comment to see the full error message\n    this.itemsNode.addEventListener('mousedown', this.handleMousedown)\n  }\n\n  componentWillUnmount() {\n    // @ts-expect-error TS(2339) FIXME: Property 'itemsNode' does not exist on type 'Dropd... Remove this comment to see the full error message\n    this.itemsNode.removeEventListener('keydown', this.handleKeydown)\n    // @ts-expect-error TS(2339) FIXME: Property 'itemsNode' does not exist on type 'Dropd... Remove this comment to see the full error message\n    this.itemsNode.removeEventListener('mousedown', this.handleMousedown)\n  }\n\n  handleMousedown = () => {\n    this.setState({ usingMouse: true })\n  }\n\n  togglePopup = () => {\n    // @ts-expect-error TS(2339) FIXME: Property 'isOpen' does not exist on type 'Readonly... Remove this comment to see the full error message\n    const { isOpen } = this.state\n    this.setState({ isOpen: !isOpen })\n  }\n\n  // @ts-expect-error TS(2339) FIXME: Property 'isOpen' does not exist on type 'Readonly... Remove this comment to see the full error message\n  isPopupOpen = () => this.state.isOpen\n\n  openPopup = () => {\n    this.setState({ isOpen: true })\n  }\n\n  closePopup = () => {\n    this.setState({ isOpen: false })\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'event' implicitly has an 'any' type.\n  handleKeydown = (event) => {\n    let flag = false\n    switch (event.keyCode) {\n      // @ts-expect-error TS(2339) FIXME: Property 'keyCode' does not exist on type 'Dropdow... Remove this comment to see the full error message\n      case this.keyCode.SPACE:\n      // @ts-expect-error TS(2339) FIXME: Property 'keyCode' does not exist on type 'Dropdow... Remove this comment to see the full error message\n      case this.keyCode.RETURN:\n      // @ts-expect-error TS(2339) FIXME: Property 'keyCode' does not exist on type 'Dropdow... Remove this comment to see the full error message\n      case this.keyCode.DOWN:\n        if (!this.isPopupOpen()) {\n          this.openPopup()\n          flag = true\n        }\n        break\n      // @ts-expect-error TS(2339) FIXME: Property 'keyCode' does not exist on type 'Dropdow... Remove this comment to see the full error message\n      case this.keyCode.ESC:\n      // @ts-expect-error TS(2339) FIXME: Property 'keyCode' does not exist on type 'Dropdow... Remove this comment to see the full error message\n      case this.keyCode.TAB:\n        this.closePopup()\n        break\n      default:\n        break\n    }\n\n    this.setState({ usingMouse: false })\n\n    if (flag) {\n      event.stopPropagation()\n      event.preventDefault()\n    }\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'event' implicitly has an 'any' type.\n  handlePopupBlur = (event) => {\n    const outsideOfPopup = !event.currentTarget.contains(event.relatedTarget)\n    setTimeout(() => {\n      if (this.isPopupOpen() && outsideOfPopup) {\n        this.closePopup()\n      }\n    }, 300)\n  }\n\n  render() {\n    const {\n      // @ts-expect-error TS(2339) FIXME: Property 'menubarItem' does not exist on type 'Rea... Remove this comment to see the full error message\n      menubarItem,\n      // @ts-expect-error TS(2339) FIXME: Property 'items' does not exist on type 'Readonly<... Remove this comment to see the full error message\n      items,\n      // @ts-expect-error TS(2339) FIXME: Property 'ariaLabel' does not exist on type 'Reado... Remove this comment to see the full error message\n      ariaLabel,\n      // @ts-expect-error TS(2339) FIXME: Property 'ariaLabelPopup' does not exist on type '... Remove this comment to see the full error message\n      ariaLabelPopup,\n      // @ts-expect-error TS(2339) FIXME: Property 'horizontalOffset' does not exist on type... Remove this comment to see the full error message\n      horizontalOffset,\n      // @ts-expect-error TS(2339) FIXME: Property 'xPosition' does not exist on type 'Reado... Remove this comment to see the full error message\n      xPosition,\n      // @ts-expect-error TS(2339) FIXME: Property 'onOpen' does not exist on type 'Readonly... Remove this comment to see the full error message\n      onOpen,\n    } = this.props\n\n    const MenubarItem = React.cloneElement(menubarItem)\n\n    return (\n      <DropdownItems\n        // @ts-expect-error TS(7006) FIXME: Parameter 'itemsNode' implicitly has an 'any' type... Remove this comment to see the full error message\n        ref={(itemsNode) => (this.itemsNode = itemsNode)}\n        role=\"menubar\"\n        aria-label={ariaLabel}\n        // @ts-expect-error TS(2339) FIXME: Property 'usingMouse' does not exist on type 'Read... Remove this comment to see the full error message\n        usingMouse={this.state.usingMouse}\n      >\n        <Item role=\"none\" menuOption>\n          <MenubarItem.type\n            {...MenubarItem.props}\n            role=\"menuitem\"\n            // @ts-expect-error TS(2322) FIXME: Type 'string' is not assignable to type 'number'.\n            tabIndex=\"0\"\n            aria-haspopup=\"true\"\n            // @ts-expect-error TS(2339) FIXME: Property 'isOpen' does not exist on type 'Readonly... Remove this comment to see the full error message\n            aria-expanded={this.state.isOpen}\n            onKeyDown={(ev) => this.handleKeydown(ev)}\n            onClick={(ev) => {\n              this.togglePopup()\n              ev.preventDefault()\n            }}\n          />\n          <PopupMenu\n            // @ts-expect-error TS(2322) FIXME: Type '{ role: string; xPosition: any; items: any; ... Remove this comment to see the full error message\n            role=\"menu\"\n            xPosition={xPosition}\n            items={items}\n            aria-label={ariaLabelPopup}\n            horizontalOffset={horizontalOffset}\n            // @ts-expect-error TS(2339) FIXME: Property 'isOpen' does not exist on type 'Readonly... Remove this comment to see the full error message\n            isOpen={this.state.isOpen}\n            // @ts-expect-error TS(2339) FIXME: Property 'usingMouse' does not exist on type 'Read... Remove this comment to see the full error message\n            usingMouse={this.state.usingMouse}\n            closePopup={this.closePopup}\n            // @ts-expect-error TS(7006) FIXME: Parameter 'event' implicitly has an 'any' type.\n            onBlur={(event) => this.handlePopupBlur(event)}\n            onOpen={onOpen}\n          />\n        </Item>\n      </DropdownItems>\n    )\n  }\n}\n\n// @ts-expect-error TS(2339) FIXME: Property 'propTypes' does not exist on type 'typeo... Remove this comment to see the full error message\nDropdownMenu.propTypes = {\n  /** Link in the NavBar that triggers the popup */\n  menubarItem: PropTypes.node.isRequired,\n\n  /** Aria label for list component */\n  ariaLabel: PropTypes.string.isRequired,\n\n  /** Aria label for popup menu, it should preferibly be the same as the menubarItem name */\n  ariaLabelPopup: PropTypes.string,\n\n  /** xPosition for Dropdown menu */\n  xPosition: PropTypes.string,\n\n  /** Items list to display in the popup menu */\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      title: PropTypes.string,\n      colors: PropTypes.shape({\n        title: PropTypes.string,\n        iconHover: PropTypes.string,\n      }),\n    }),\n  ).isRequired,\n\n  /** onOpen function to fire when the Dropdown menu is open */\n  onOpen: PropTypes.func,\n}\n\n// @ts-expect-error TS(2339) FIXME: Property 'defaultProps' does not exist on type 'ty... Remove this comment to see the full error message\nDropdownMenu.defaultProps = {\n  ariaLabelPopup: null,\n  xPosition: 'right',\n  onOpen: null,\n}\n"]}