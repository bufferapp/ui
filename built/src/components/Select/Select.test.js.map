{"version":3,"file":"Select.test.js","sourceRoot":"","sources":["../../../../src/components/Select/Select.test.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,MAAM,OAAO,CAAA;AAEzB,OAAO,MAAM,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,QAAQ,CAAA;AAE/C,OAAO,OAAO,MAAM,yBAAyB,CAAA;AAC7C,OAAO,MAAM,MAAM,UAAU,CAAA;AAE7B,MAAM,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,IAAI,OAAO,EAAE,EAAE,CAAC,CAAA;AAE5C,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChC,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;QACjD,MAAM,OAAO,GAAG,KAAK,CAEnB,oBAAC,MAAM,IAAC,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAC,QAAQ,GAAG,CAChE,CAAA;QACD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QACnC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAC1C,QAAQ,CAAC,aAAa,EAAE,CAAA;QACxB,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IAC3C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;QACjD,MAAM,OAAO,GAAG,KAAK,CAEnB,oBAAC,MAAM,IAAC,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAC,QAAQ,GAAG,CAChE,CAAA;QACD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QACnC,QAAQ,CAAC,aAAa,EAAE,CAAA;QACxB,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACzC,QAAQ,CAAC,YAAY,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAA;QACvC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IAC5C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C,MAAM,OAAO,GAAG,KAAK,CAEnB,oBAAC,MAAM,IAAC,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAC,QAAQ,GAAG,CAChE,CAAA;QACD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QACnC,QAAQ,CAAC,aAAa,EAAE,CAAA;QACxB,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACzC,QAAQ,CAAC,OAAO,EAAE,CAAA;QAClB,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IAC5C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,gEAAgE,EAAE,GAAG,EAAE;QACxE,MAAM,OAAO,GAAG,OAAO,CACrB,oBAAC,MAAM,IAEL,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,EACzB,MAAM,EAAE,KAAK,EACb,KAAK,EAAE,EAAE,EACT,KAAK,EAAC,QAAQ,GACd,CACH,CAAA;QACD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QAEnC,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAA;QAC/D,MAAM,CAAC,iBAAiB,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAA;QAElD,OAAO,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAA;QAClC,MAAM,CAAC,iBAAiB,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAA;IACpD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,wHAAwH,EAAE,GAAG,EAAE;QAChI,MAAM,OAAO,GAAG,KAAK,CACnB,oBAAC,MAAM,IAEL,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,EACzB,KAAK,EAAE,EAAE,EACT,KAAK,EAAC,QAAQ,EACd,iBAAiB,EAAE,KAAK,GACxB,CACH,CAAA;QACD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QACnC,OAAO,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,mBAAmB,EAAE,CAAC,CAAA;QAErE,MAAM,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAA;QACjE,MAAM,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAA;QACrE,MAAM,gBAAgB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAA;QAClC,QAAQ,CAAC,WAAW,GAAG,EAAE,YAAY,EAAE,gBAAgB,EAAE,CAAA;QAEzD,OAAO,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAA;QAElC,MAAM,CAAC,oBAAoB,CAAC,CAAC,gBAAgB,EAAE,CAAA;QAC/C,MAAM,CAAC,gBAAgB,CAAC,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAAA;QAClE,MAAM,CAAC,kBAAkB,CAAC,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAAA;IACtE,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,qFAAqF,EAAE,GAAG,EAAE;QAC7F,MAAM,OAAO,GAAG,KAAK,CACnB,oBAAC,MAAM,IAEL,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,EACzB,KAAK,EAAE,EAAE,EACT,KAAK,EAAC,QAAQ,EACd,iBAAiB,SACjB,CACH,CAAA;QACD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QACnC,OAAO,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,mBAAmB,EAAE,CAAC,CAAA;QAEpE,MAAM,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAA;QACjE,MAAM,0BAA0B,GAAG,IAAI,CAAC,KAAK,CAC3C,QAAQ,EACR,wBAAwB,CACzB,CAAA;QACD,MAAM,gBAAgB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAA;QAClC,QAAQ,CAAC,WAAW,GAAG,EAAE,YAAY,EAAE,gBAAgB,EAAE,CAAA;QAEzD,OAAO,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAA;QAEnC,MAAM,CAAC,0BAA0B,CAAC,CAAC,gBAAgB,EAAE,CAAA;QACrD,MAAM,CAAC,gBAAgB,CAAC,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAA;QACjD,MAAM,CAAC,kBAAkB,CAAC,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAA;QAEnD,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;IAC9C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,+CAA+C,EAAE,GAAG,EAAE;QACvD,MAAM,iBAAiB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAA;QACnC,MAAM,OAAO,GAAG,OAAO,CAErB,oBAAC,MAAM,IAAC,aAAa,EAAE,iBAAiB,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAC,QAAQ,GAAG,CACvE,CAAA;QACD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QACnC,QAAQ,CAAC,kBAAkB,EAAE,CAAA;QAC7B,MAAM,CAAC,iBAAiB,CAAC,CAAC,gBAAgB,EAAE,CAAA;IAC9C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,gEAAgE,EAAE,GAAG,EAAE;QACxE,MAAM,iBAAiB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAA;QACnC,MAAM,KAAK,GAAG;YACZ;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,QAAQ;gBACf,iBAAiB,EAAE,GAAG,EAAE;oBACtB,iBAAiB,EAAE,CAAA;gBACrB,CAAC;aACF;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,QAAQ;gBACf,iBAAiB,EAAE,GAAG,EAAE;oBACtB,iBAAiB,EAAE,CAAA;gBACrB,CAAC;aACF;SACF,CAAA;QACD,MAAM,eAAe,GAAG,CACtB,oBAAC,MAAM,IAEL,KAAK,EAAC,QAAQ,EAEd,aAAa,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,iBAAiB,EAAE,EACjE,KAAK,EAAE,KAAK,GACZ,CACH,CAAA;QACD,MAAM,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC,CAAA;QACxC,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QACnC,QAAQ,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;QACrC,MAAM,CAAC,iBAAiB,CAAC,CAAC,gBAAgB,EAAE,CAAA;IAC9C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,+CAA+C,EAAE,GAAG,EAAE;QACvD,MAAM,KAAK,GAAG;YACZ,eAAe,EAAE,IAAI,CAAC,EAAE,EAAE;YAC1B,WAAW,EAAE;gBACX,wBAAwB,EAAE,IAAI,CAAC,EAAE,EAAE;aACpC;SACF,CAAA;QACD,MAAM,OAAO,GAAG,OAAO,CAErB,oBAAC,MAAM,IAAC,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAC,QAAQ,GAAG,CAChE,CAAA;QACD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QACnC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;QACvB,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,gBAAgB,EAAE,CAAA;QAChD,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,wBAAwB,CAAC,CAAC,gBAAgB,EAAE,CAAA;IACvE,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,+CAA+C,EAAE,GAAG,EAAE;QACvD,MAAM,OAAO,GAAG,OAAO,CACrB,oBAAC,MAAM,IAEL,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,EACzB,KAAK,EAAE;gBACL;oBACE,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,SAAS;iBACjB;gBACD;oBACE,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,KAAK;iBACb;aACF,EACD,KAAK,EAAC,QAAQ,GACd,CACH,CAAA;QACD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QACnC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;QAC/B,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;YACpC;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,SAAS;aACjB;SACF,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,uFAAuF,EAAE,GAAG,EAAE;QAC/F,MAAM,OAAO,GAAG,OAAO,CACrB,oBAAC,MAAM,IAEL,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,EACzB,KAAK,EAAE;gBACL;oBACE,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,SAAS;iBACjB;gBACD;oBACE,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,KAAK;iBACb;aACF,EACD,KAAK,EAAC,QAAQ,GACd,CACH,CAAA;QACD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QAGnC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;QAC/B,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;QAGjD,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAA;QAC3B,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;IACpD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,iGAAiG,EAAE,GAAG,EAAE;QACzG,MAAM,OAAO,GAAG,OAAO,CACrB,oBAAC,MAAM,IAEL,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,EACzB,KAAK,EAAE;gBACL;oBACE,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,MAAM;iBACd;gBACD;oBACE,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,SAAS;iBACjB;gBACD;oBACE,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,QAAQ;iBAChB;aACF,EACD,KAAK,EAAC,QAAQ,GACd,CACH,CAAA;QACD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QACnC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAA;QAC9B,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;YACpC;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,MAAM;aACd;SACF,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,qFAAqF,EAAE,GAAG,EAAE;QAC7F,MAAM,OAAO,GAAG,OAAO,CACrB,oBAAC,MAAM,IAEL,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,EACzB,KAAK,EAAE;gBACL;oBACE,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,MAAM;oBACb,YAAY,EAAE,IAAI;iBACnB;gBACD;oBACE,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,SAAS;iBACjB;gBACD;oBACE,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,QAAQ;iBAChB;aACF,EACD,KAAK,EAAC,QAAQ,GACd,CACH,CAAA;QACD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QACnC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAA;QAC9B,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;YACpC;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,SAAS;aACjB;SACF,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,2FAA2F,EAAE,GAAG,EAAE;QACnG,MAAM,OAAO,GAAG,OAAO,CACrB,oBAAC,MAAM,IAEL,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,EACzB,KAAK,EAAE;gBACL;oBACE,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,MAAM;oBACb,YAAY,EAAE,IAAI;iBACnB;gBACD;oBACE,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,SAAS;iBACjB;gBACD;oBACE,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,QAAQ;iBAChB;aACF,EACD,KAAK,EAAC,QAAQ,GACd,CACH,CAAA;QACD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QACnC,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAA;QAC3B,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;YACpC;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,MAAM;gBACb,YAAY,EAAE,IAAI;aACnB;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,QAAQ;aAChB;SACF,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,+DAA+D,EAAE,GAAG,EAAE;QACvE,MAAM,OAAO,GAAG,OAAO,CAErB,oBAAC,MAAM,IAAC,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAC,QAAQ,GAAG,CAChE,CAAA;QACD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QACnC,MAAM,KAAK,GAAG;YACZ;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,KAAK;aACb;SACF,CAAA;QACD,MAAM,WAAW,GAAG,CAAC,CAAA;QACrB,MAAM,WAAW,GAAG,CAAC,CAAA;QACrB,QAAQ,CAAC,yBAAyB,CAAC,WAAW,EAAE,WAAW,EAAE,KAAK,CAAC,CAAA;QACnE,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IAC7C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,kFAAkF,EAAE,GAAG,EAAE;QAE1F,MAAM,OAAO,GAAG,OAAO,CAAC,oBAAC,MAAM,IAAC,KAAK,EAAE,EAAE,EAAE,KAAK,EAAC,QAAQ,GAAG,CAAC,CAAA;QAC7D,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QAEnC,MAAM,sBAAsB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,oBAAoB,CAAC,CAAA;QACzE,QAAQ,CAAC,SAAS,EAAE,CAAA;QACpB,MAAM,CAAC,sBAAsB,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAA;IACzD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,0EAA0E,EAAE,GAAG,EAAE;QAClF,MAAM,KAAK,GAAG;YACZ;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,KAAK;aACb;SACF,CAAA;QAGD,MAAM,OAAO,GAAG,OAAO,CAAC,oBAAC,MAAM,IAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAC,QAAQ,GAAG,CAAC,CAAA;QAChE,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QACnC,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAA;QAEvC,MAAM,WAAW,GAAG,CAAC,CAAA;QACrB,MAAM,WAAW,GAAG,CAAC,CAAA;QACrB,QAAQ,CAAC,yBAAyB,CAAC,WAAW,EAAE,WAAW,EAAE,KAAK,CAAC,CAAA;QAEnE,QAAQ,CAAC,SAAS,EAAE,CAAA;QACpB,MAAM,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,gBAAgB,EAAE,CAAA;IACxD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,kEAAkE,EAAE,GAAG,EAAE;QAC1E,MAAM,OAAO,GAAG,OAAO,CAErB,oBAAC,MAAM,IAAC,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAC,QAAQ,GAAG,CAChE,CAAA;QACD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QACnC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,2BAA2B,CAAC,CAAA;QACjE,QAAQ,CAAC,UAAU,EAAE,CAAA;QACrB,MAAM,CAAC,OAAO,CAAC,CAAC,gBAAgB,EAAE,CAAA;QAClC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IAC7C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;QAChE,MAAM,OAAO,GAAG,OAAO,CAErB,oBAAC,MAAM,IAAC,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAC,QAAQ,GAAG,CAChE,CAAA;QACD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QACnC,OAAO,CAAC,QAAQ,CAAC;YACf,WAAW,EAAE,CAAC;YACd,KAAK,EAAE;gBACL;oBACE,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,SAAS;iBACjB;gBACD;oBACE,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,KAAK;iBACb;aACF;YACD,WAAW,EAAE,IAAI;SAClB,CAAC,CAAA;QACF,QAAQ,CAAC,UAAU,EAAE,CAAA;QACrB,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IAC7C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,sDAAsD,EAAE,GAAG,EAAE;QAC9D,MAAM,OAAO,GAAG,OAAO,CAErB,oBAAC,MAAM,IAAC,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAC,QAAQ,GAAG,CAChE,CAAA;QACD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAA;QACnC,OAAO,CAAC,QAAQ,CAAC;YACf,WAAW,EAAE,CAAC;YACd,KAAK,EAAE;gBACL;oBACE,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,SAAS;iBACjB;gBACD;oBACE,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,KAAK;iBACb;aACF;YACD,WAAW,EAAE,IAAI;SAClB,CAAC,CAAA;QACF,QAAQ,CAAC,QAAQ,EAAE,CAAA;QACnB,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IAC7C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;QAC3C,QAAQ,CAAC,mBAAmB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAA;QAExC,MAAM,OAAO,GAAG,OAAO,CAErB,oBAAC,MAAM,IAAC,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAC,QAAQ,GAAG,CAChE,CAAA;QAED,OAAO,CAAC,OAAO,EAAE,CAAA;QAEjB,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,gBAAgB,EAAE,CAAA;IACzD,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["/* eslint-disable react/jsx-filename-extension */\nimport React from 'react'\n// @ts-expect-error TS(7016) FIXME: Could not find a declaration file for module 'enzy... Remove this comment to see the full error message\nimport Enzyme, { shallow, mount } from 'enzyme'\n// @ts-expect-error TS(7016) FIXME: Could not find a declaration file for module 'enzy... Remove this comment to see the full error message\nimport Adapter from 'enzyme-adapter-react-16'\nimport Select from './Select'\n\nEnzyme.configure({ adapter: new Adapter() })\n\ndescribe('Select component', () => {\n  it('openPopup: should open the closed popup', () => {\n    const wrapper = mount(\n      // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n      <Select onSelectClick={() => true} items={[]} label=\"Select\" />,\n    )\n    const instance = wrapper.instance()\n    expect(wrapper.state().isOpen).toBe(false)\n    instance.onButtonClick()\n    expect(wrapper.state().isOpen).toBe(true)\n  })\n\n  it('closePopup: should close the open popup', () => {\n    const wrapper = mount(\n      // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n      <Select onSelectClick={() => true} items={[]} label=\"Select\" />,\n    )\n    const instance = wrapper.instance()\n    instance.onButtonClick()\n    expect(wrapper.state().isOpen).toBe(true)\n    instance.closePopover({ target: null })\n    expect(wrapper.state().isOpen).toBe(false)\n  })\n\n  it('onClose: should close the open popup', () => {\n    const wrapper = mount(\n      // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n      <Select onSelectClick={() => true} items={[]} label=\"Select\" />,\n    )\n    const instance = wrapper.instance()\n    instance.onButtonClick()\n    expect(wrapper.state().isOpen).toBe(true)\n    instance.onClose()\n    expect(wrapper.state().isOpen).toBe(false)\n  })\n\n  it('componentDidUpdate: run onButtonClick when isOpen prop changes', () => {\n    const wrapper = shallow(\n      <Select\n        // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n        onSelectClick={() => true}\n        isOpen={false}\n        items={[]}\n        label=\"Select\"\n      />,\n    )\n    const instance = wrapper.instance()\n\n    const onButtonClickMock = jest.spyOn(instance, 'onButtonClick')\n    expect(onButtonClickMock).toHaveBeenCalledTimes(0)\n\n    wrapper.setProps({ isOpen: true })\n    expect(onButtonClickMock).toHaveBeenCalledTimes(1)\n  })\n\n  it('componentDidUpdate: should run filterOnMenuOpen on open if clearSearchOnBlur is false and search value exists in state', () => {\n    const wrapper = mount(\n      <Select\n        // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n        onSelectClick={() => true}\n        items={[]}\n        label=\"Select\"\n        clearSearchOnBlur={false}\n      />,\n    )\n    const instance = wrapper.instance()\n    wrapper.setState({ isOpen: false, searchValue: 'Test search value' })\n\n    const onSearchChangeMock = jest.spyOn(instance, 'onSearchChange')\n    const filterOnMenuOpenMock = jest.spyOn(instance, 'filterOnMenuOpen')\n    const updateSearchMock = jest.fn()\n    instance.searchInput = { updateSearch: updateSearchMock }\n\n    wrapper.setState({ isOpen: true })\n\n    expect(filterOnMenuOpenMock).toHaveBeenCalled()\n    expect(updateSearchMock).toHaveBeenCalledWith('Test search value')\n    expect(onSearchChangeMock).toHaveBeenCalledWith('Test search value')\n  })\n\n  it('componentDidUpdate: should clear search value on close if clearSearchOnBlur is true', () => {\n    const wrapper = mount(\n      <Select\n        // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n        onSelectClick={() => true}\n        items={[]}\n        label=\"Select\"\n        clearSearchOnBlur\n      />,\n    )\n    const instance = wrapper.instance()\n    wrapper.setState({ isOpen: true, searchValue: 'Test search value' })\n\n    const onSearchChangeMock = jest.spyOn(instance, 'onSearchChange')\n    const clearSearchOnMenuCloseMock = jest.spyOn(\n      instance,\n      'clearSearchOnMenuClose',\n    )\n    const updateSearchMock = jest.fn()\n    instance.searchInput = { updateSearch: updateSearchMock }\n\n    wrapper.setState({ isOpen: false })\n\n    expect(clearSearchOnMenuCloseMock).toHaveBeenCalled()\n    expect(updateSearchMock).toHaveBeenCalledWith('')\n    expect(onSearchChangeMock).toHaveBeenCalledWith('')\n\n    expect(wrapper.state().searchValue).toBe('')\n  })\n\n  it('handleSelectOption: should call onSelectClick', () => {\n    const onSelectClickSply = jest.fn()\n    const wrapper = shallow(\n      // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n      <Select onSelectClick={onSelectClickSply} items={[]} label=\"Select\" />,\n    )\n    const instance = wrapper.instance()\n    instance.handleSelectOption()\n    expect(onSelectClickSply).toHaveBeenCalled()\n  })\n\n  it('handleSelectOption: should call onSelectClick for custom items', () => {\n    const onCustomItemClick = jest.fn()\n    const items = [\n      {\n        id: '1',\n        title: 'Item 1',\n        selectedItemClick: () => {\n          onCustomItemClick()\n        },\n      },\n      {\n        id: '2',\n        title: 'Item 2',\n        selectedItemClick: () => {\n          onCustomItemClick()\n        },\n      },\n    ]\n    const SelectComponent = (\n      <Select\n        // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n        label=\"Select\"\n        // @ts-expect-error TS(7006) FIXME: Parameter 'selectedItem' implicitly has an 'any' t... Remove this comment to see the full error message\n        onSelectClick={(selectedItem) => selectedItem.selectedItemClick()}\n        items={items}\n      />\n    )\n    const wrapper = shallow(SelectComponent)\n    const instance = wrapper.instance()\n    instance.handleSelectOption(items[0])\n    expect(onCustomItemClick).toHaveBeenCalled()\n  })\n\n  it('onClick: should call stopImmediatePropagation', () => {\n    const event = {\n      stopPropagation: jest.fn(),\n      nativeEvent: {\n        stopImmediatePropagation: jest.fn(),\n      },\n    }\n    const wrapper = shallow(\n      // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n      <Select onSelectClick={() => true} items={[]} label=\"Select\" />,\n    )\n    const instance = wrapper.instance()\n    instance.onClick(event)\n    expect(event.stopPropagation).toHaveBeenCalled()\n    expect(event.nativeEvent.stopImmediatePropagation).toHaveBeenCalled()\n  })\n\n  it('onSearchChange: should update search in state', () => {\n    const wrapper = shallow(\n      <Select\n        // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n        onSelectClick={() => true}\n        items={[\n          {\n            id: '1',\n            title: 'Testing',\n          },\n          {\n            id: '2',\n            title: '123',\n          },\n        ]}\n        label=\"Select\"\n      />,\n    )\n    const instance = wrapper.instance()\n    instance.onSearchChange('Test')\n    expect(wrapper.state().items).toEqual([\n      {\n        id: '1',\n        title: 'Testing',\n      },\n    ])\n  })\n\n  it('onSearchChange: should only set isFiltering state to true if search value is provided', () => {\n    const wrapper = shallow(\n      <Select\n        // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n        onSelectClick={() => true}\n        items={[\n          {\n            id: '1',\n            title: 'Testing',\n          },\n          {\n            id: '2',\n            title: '123',\n          },\n        ]}\n        label=\"Select\"\n      />,\n    )\n    const instance = wrapper.instance()\n\n    // Set isFiltering to true because searchValue has a value\n    instance.onSearchChange('Test')\n    expect(wrapper.state().isFiltering).toEqual(true)\n\n    // Set isFiltering to false because searchValue has no value\n    instance.onSearchChange('')\n    expect(wrapper.state().isFiltering).toEqual(false)\n  })\n\n  it('onSearchChange: should re-order search in state based on matches with startsWith, then includes', () => {\n    const wrapper = shallow(\n      <Select\n        // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n        onSelectClick={() => true}\n        items={[\n          {\n            id: '1',\n            title: 'Open',\n          },\n          {\n            id: '2',\n            title: 'Pending',\n          },\n          {\n            id: '3',\n            title: 'Closed',\n          },\n        ]}\n        label=\"Select\"\n      />,\n    )\n    const instance = wrapper.instance()\n    instance.onSearchChange('Pen')\n    expect(wrapper.state().items).toEqual([\n      {\n        id: '2',\n        title: 'Pending',\n      },\n      {\n        id: '1',\n        title: 'Open',\n      },\n    ])\n  })\n\n  it('onSearchChange: should exclude items from search if \"hideOnSearch\" property is true', () => {\n    const wrapper = shallow(\n      <Select\n        // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n        onSelectClick={() => true}\n        items={[\n          {\n            id: '1',\n            title: 'Open',\n            hideOnSearch: true,\n          },\n          {\n            id: '2',\n            title: 'Pending',\n          },\n          {\n            id: '3',\n            title: 'Closed',\n          },\n        ]}\n        label=\"Select\"\n      />,\n    )\n    const instance = wrapper.instance()\n    instance.onSearchChange('Pen')\n    expect(wrapper.state().items).toEqual([\n      {\n        id: '2',\n        title: 'Pending',\n      },\n    ])\n  })\n\n  it('onSearchChange: \"hideOnSearch\" property should only hide item if search value is provided', () => {\n    const wrapper = shallow(\n      <Select\n        // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n        onSelectClick={() => true}\n        items={[\n          {\n            id: '1',\n            title: 'Open',\n            hideOnSearch: true,\n          },\n          {\n            id: '2',\n            title: 'Pending',\n          },\n          {\n            id: '3',\n            title: 'Closed',\n          },\n        ]}\n        label=\"Select\"\n      />,\n    )\n    const instance = wrapper.instance()\n    instance.onSearchChange('')\n    expect(wrapper.state().items).toEqual([\n      {\n        id: '1',\n        title: 'Open',\n        hideOnSearch: true,\n      },\n      {\n        id: '2',\n        title: 'Pending',\n      },\n      {\n        id: '3',\n        title: 'Closed',\n      },\n    ])\n  })\n\n  it('updateHoveredItemPosition: should update hoveredItem in state', () => {\n    const wrapper = shallow(\n      // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n      <Select onSelectClick={() => true} items={[]} label=\"Select\" />,\n    )\n    const instance = wrapper.instance()\n    const items = [\n      {\n        id: '1',\n        title: 'Testing',\n      },\n      {\n        id: '2',\n        title: '123',\n      },\n    ]\n    const hoveredItem = 0\n    const itemsLength = 2\n    instance.updateHoveredItemPosition(hoveredItem, itemsLength, items)\n    expect(wrapper.state().hoveredItem).toBe(1)\n  })\n\n  it('onAddItem: should not call handleSelectOption if hoveredItem is not set in state', () => {\n    // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n    const wrapper = shallow(<Select items={[]} label=\"Select\" />)\n    const instance = wrapper.instance()\n\n    const handleSelectOptionMock = jest.spyOn(instance, 'handleSelectOption')\n    instance.onAddItem()\n    expect(handleSelectOptionMock).toHaveBeenCalledTimes(0)\n  })\n\n  it('onAddItem: should call handleSelectOption if hoveredItem is set in state', () => {\n    const items = [\n      {\n        id: '1',\n        title: 'Testing',\n      },\n      {\n        id: '2',\n        title: '123',\n      },\n    ]\n\n    // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n    const wrapper = shallow(<Select items={items} label=\"Select\" />)\n    const instance = wrapper.instance()\n    instance.handleSelectOption = jest.fn()\n\n    const hoveredItem = 0\n    const itemsLength = 2\n    instance.updateHoveredItemPosition(hoveredItem, itemsLength, items)\n\n    instance.onAddItem()\n    expect(instance.handleSelectOption).toHaveBeenCalled()\n  })\n\n  it('onMoveDown: should set the hoveredItem in state if there is none', () => {\n    const wrapper = shallow(\n      // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n      <Select onSelectClick={() => true} items={[]} label=\"Select\" />,\n    )\n    const instance = wrapper.instance()\n    const spyFunc = jest.spyOn(instance, 'updateHoveredItemPosition')\n    instance.onMoveDown()\n    expect(spyFunc).toHaveBeenCalled()\n    expect(wrapper.state().hoveredItem).toBe(0)\n  })\n\n  it('onMoveDown: should increase hoveredItem in state by +1', () => {\n    const wrapper = shallow(\n      // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n      <Select onSelectClick={() => true} items={[]} label=\"Select\" />,\n    )\n    const instance = wrapper.instance()\n    wrapper.setState({\n      hoveredItem: 0,\n      items: [\n        {\n          id: '1',\n          title: 'Testing',\n        },\n        {\n          id: '2',\n          title: '123',\n        },\n      ],\n      isFiltering: true,\n    })\n    instance.onMoveDown()\n    expect(wrapper.state().hoveredItem).toBe(1)\n  })\n\n  it('onMoveUp: should decrease hoveredItem in state by -1', () => {\n    const wrapper = shallow(\n      // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n      <Select onSelectClick={() => true} items={[]} label=\"Select\" />,\n    )\n    const instance = wrapper.instance()\n    wrapper.setState({\n      hoveredItem: 1,\n      items: [\n        {\n          id: '1',\n          title: 'Testing',\n        },\n        {\n          id: '2',\n          title: '123',\n        },\n      ],\n      isFiltering: true,\n    })\n    instance.onMoveUp()\n    expect(wrapper.state().hoveredItem).toBe(0)\n  })\n\n  it('Should remove listener on unmount', () => {\n    document.removeEventListener = jest.fn()\n\n    const wrapper = shallow(\n      // @ts-expect-error TS(2769) FIXME: No overload matches this call.\n      <Select onSelectClick={() => true} items={[]} label=\"Select\" />,\n    )\n\n    wrapper.unmount()\n\n    expect(document.removeEventListener).toHaveBeenCalled()\n  })\n})\n"]}