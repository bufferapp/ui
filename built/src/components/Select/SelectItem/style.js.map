{"version":3,"file":"style.js","sourceRoot":"","sources":["../../../../../src/components/Select/SelectItem/style.ts"],"names":[],"mappings":"AACA,OAAO,MAAM,MAAM,mBAAmB,CAAA;AACtC,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAA;AAChE,OAAO,EAAE,UAAU,EAAE,gBAAgB,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAA;AAE1E,MAAM,CAAC,MAAM,gBAAgB,GAAG,MAAM,CAAC,EAAE,CAAA;;;WAG9B,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC;;;eAGhD,QAAQ;iBACN,UAAU;;;;;;;;sBAQL,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,CAAC;;wBAEpD,SAAS;;oBAEb,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;CAChE,CAAA;AAED,MAAM,CAAC,MAAM,eAAe,GAAG,MAAM,CAAC,GAAG,CAAA;eAC1B,QAAQ;iBACN,gBAAgB;;;;oBAIb,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC;;;;;;CAM7E,CAAA;AAED,MAAM,CAAC,MAAM,cAAc,GAAG,MAAM,CAAC,GAAG,CAAA;;mBAErB,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;UACnD,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;CACvD,CAAA;AAED,MAAM,CAAC,MAAM,eAAe,GAAG,MAAM,CAAC,CAAC,CAAA;YAC3B,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,KAAK,CAAC;;;;;CAKpE,CAAA;AAED,MAAM,CAAC,MAAM,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAA;;;CAG1C,CAAA;AAED,MAAM,CAAC,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAA;;YAE1B,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;WACxC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;;;;aAIrC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;CACpD,CAAA;AAED,MAAM,CAAC,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAA;;;;;;;;WAQ5B,IAAI;CACd,CAAA;AAED,MAAM,CAAC,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAA;;;;;;CAM/B,CAAA","sourcesContent":["/* eslint-disable no-nested-ternary */\nimport styled from 'styled-components'\nimport { grayDarker, gray, grayLight } from '../../style/colors'\nimport { fontFamily, fontWeightMedium, fontSize } from '../../style/fonts'\n\nexport const SelectItemStyled = styled.li`\n  min-height: 32px;\n  align-items: center;\n  color: ${(props) => (props.disabled ? grayLight : grayDarker)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${fontSize};\n  font-family: ${fontFamily};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  user-select: none;\n  white-space: nowrap;\n  margin-left: 8px;\n  margin-right: 8px;\n  border-radius: 4px;\n  background-color: ${(props) => (props.hovered ? grayLight : 'transparent')};\n  &:hover {\n    background-color: ${grayLight};\n  }\n  pointer-events: ${(props) => (props.disabled ? 'none' : 'auto')};\n`\n\nexport const SelectItemLabel = styled.div`\n  font-size: ${fontSize};\n  font-weight: ${fontWeightMedium};\n  min-width: 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-transform: ${(props) => (props.capitalizeItemLabel ? 'capitalize' : '')};\n  padding-left: 8px;\n  padding-right: 8px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`\n\nexport const SelectItemIcon = styled.div`\n  display: flex;\n  padding-right: ${(props) => (props.iconEnd ? '0px' : '8px')};\n  fill: ${(props) => (props.hovered ? grayDarker : gray)};\n`\n\nexport const SelectItemTitle = styled.p`\n  margin: ${(props) => (props.moveRight ? '0px 0px 0px 24px' : '0px')};\n  width: 100%;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n`\n\nexport const SelectItemCustom = styled.span`\n  display: flex;\n  align-items: center;\n`\n\nexport const IconWrapper = styled.span`\n  margin-right: 8px;\n  height: ${(props) => (props.custom ? '' : '16px')};\n  width: ${(props) => (props.custom ? '' : '16px')};\n  display: flex;\n  justify-content: center;\n  flex-shrink: 0;\n  padding: ${(props) => (props.custom ? '2px 0' : '')};\n`\n\nexport const HotKeyPrompt = styled.span`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: bold;\n  line-height: normal;\n  font-size: 12px;\n  text-align: justify;\n  letter-spacing: -0.233333px;\n  color: ${gray};\n`\n\nexport const Title = styled.span`\n  display: inline;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  margin-right: 8px;\n`\n"]}