{"version":3,"file":"Select.js","sourceRoot":"","sources":["../../../../src/components/Select/Select.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions, react/no-unused-state */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport helper from 'immutability-helper'\nimport SearchIcon from '../Icon/Icons/Search'\nimport {\n  Wrapper,\n  SelectStyled,\n  SelectItems,\n  SelectItemDivider,\n  SearchBarWrapper,\n  NoMatchesContainer,\n  CustomItemContainer,\n  SelectItemDividerTitle,\n} from './style'\nimport SelectItem from './SelectItem/SelectItem'\nimport Button from '../Button/Button'\nimport { ButtonSelect } from '../Button/style'\nimport ChevronDown from '../Icon/Icons/ChevronDown'\nimport Search from '../Search/Search'\n\n/** Select component that opens a popup menu on click and displays items that can be selected */\nexport default class Select extends React.Component {\n  // @ts-expect-error TS(7006) FIXME: Parameter 'itemsA' implicitly has an 'any' type.\n  static sameItems = (itemsA, itemsB) =>\n    itemsA.length === itemsB.length &&\n    itemsA.every(\n      // @ts-expect-error TS(7006) FIXME: Parameter 'el' implicitly has an 'any' type.\n      (el, ix) =>\n        el &&\n        itemsB[ix] &&\n        el.id === itemsB[ix].id &&\n        el.title === itemsB[ix].title &&\n        el.selected === itemsB[ix].selected &&\n        el.disabled === itemsB[ix].disabled,\n    )\n\n  state = {\n    // @ts-expect-error TS(2339) FIXME: Property 'isOpen' does not exist on type 'Readonly... Remove this comment to see the full error message\n    isOpen: this.props.isOpen,\n    // @ts-expect-error TS(2339) FIXME: Property 'items' does not exist on type 'Readonly<... Remove this comment to see the full error message\n    items: this.props.items || [],\n    // @ts-expect-error TS(2339) FIXME: Property 'items' does not exist on type 'Readonly<... Remove this comment to see the full error message\n    selectedItems: this.props.items || [],\n    isFiltering: false,\n    searchValue: '',\n    /* We've added the functionality of adding a custom item with an action so\n    we're using this value to handle keyboard events on that custom item. We\n    use it to determine if the custom item has focus and listen for up, down\n    and enter and well as highlighting on hover */\n    isCustomItemFocused: false,\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'props' implicitly has an 'any' type.\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.items &&\n      !Select.sameItems(props.items, state.items) &&\n      !state.isFiltering\n    ) {\n      return { items: props.items, selectedItems: props.items }\n    }\n    return null\n  }\n\n  componentDidMount() {\n    // When the selector is open and users click anywhere on the page,\n    // the selector should close\n    // Set capture to true so an open select will close when another select gets opened\n    document.addEventListener('click', this.closePopover, true)\n\n    // catch the keypress to move the selected items up or down\n    // @ts-expect-error TS(2339) FIXME: Property 'selectNode' does not exist on type 'Sele... Remove this comment to see the full error message\n    this.selectNode &&\n      // @ts-expect-error TS(2339) FIXME: Property 'selectNode' does not exist on type 'Sele... Remove this comment to see the full error message\n      this.selectNode.addEventListener('keydown', this.keyDownPressed)\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'prevProps' implicitly has an 'any' type... Remove this comment to see the full error message\n  componentDidUpdate(prevProps, prevState) {\n    // Simulate button click if isOpen is being controlled\n    // @ts-expect-error TS(2339) FIXME: Property 'isOpen' does not exist on type 'Readonly... Remove this comment to see the full error message\n    if (prevProps.isOpen !== this.props.isOpen) {\n      // focus the Select component in order to be able to catch the keyboard events\n      // @ts-expect-error TS(2339) FIXME: Property 'isOpen' does not exist on type 'Readonly... Remove this comment to see the full error message\n      this.props.isOpen && this.onButtonClick()\n    }\n\n    if (\n      prevState.isOpen !== this.state.isOpen &&\n      this.state.isOpen &&\n      // @ts-expect-error TS(2339) FIXME: Property 'onOpen' does not exist on type 'Readonly... Remove this comment to see the full error message\n      this.props.onOpen\n    ) {\n      // @ts-expect-error TS(2339) FIXME: Property 'onOpen' does not exist on type 'Readonly... Remove this comment to see the full error message\n      this.props.onOpen()\n    }\n\n    const menuIsOpening = !prevState.isOpen && !!this.state.isOpen\n    const shouldFilterOnMenuOpen =\n      // @ts-expect-error TS(2339) FIXME: Property 'clearSearchOnBlur' does not exist on typ... Remove this comment to see the full error message\n      !this.props.clearSearchOnBlur && !!this.state.searchValue\n    if (menuIsOpening && shouldFilterOnMenuOpen) this.filterOnMenuOpen()\n\n    const menuIsClosing = !!prevState.isOpen && !this.state.isOpen\n    // @ts-expect-error TS(2339) FIXME: Property 'clearSearchOnBlur' does not exist on typ... Remove this comment to see the full error message\n    if (menuIsClosing && this.props.clearSearchOnBlur)\n      this.clearSearchOnMenuClose()\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.closePopover, true)\n    // @ts-expect-error TS(2339) FIXME: Property 'selectNode' does not exist on type 'Sele... Remove this comment to see the full error message\n    this.selectNode &&\n      // @ts-expect-error TS(2339) FIXME: Property 'selectNode' does not exist on type 'Sele... Remove this comment to see the full error message\n      this.selectNode.removeEventListener('keydown', this.keyDownPressed)\n  }\n\n  filterOnMenuOpen = () => {\n    // @ts-expect-error TS(2339) FIXME: Property 'searchInput' does not exist on type 'Sel... Remove this comment to see the full error message\n    if (this.searchInput) this.searchInput.updateSearch(this.state.searchValue)\n    this.onSearchChange(this.state.searchValue)\n  }\n\n  clearSearchOnMenuClose = () => {\n    // @ts-expect-error TS(2339) FIXME: Property 'searchInput' does not exist on type 'Sel... Remove this comment to see the full error message\n    if (this.searchInput) this.searchInput.updateSearch('')\n    this.onSearchChange('')\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'e' implicitly has an 'any' type.\n  keyDownPressed = (e) => {\n    // @ts-expect-error TS(2339) FIXME: Property 'shortcutsEnabled' does not exist on type... Remove this comment to see the full error message\n    const { shortcutsEnabled, hotKeys } = this.props\n    if (!shortcutsEnabled) return\n\n    if (hotKeys) {\n      // @ts-expect-error TS(7006) FIXME: Parameter 'item' implicitly has an 'any' type.\n      hotKeys.forEach((item) => {\n        if (e.which === item.hotKey) {\n          item.onKeyPress()\n        }\n      })\n    }\n\n    switch (e.which) {\n      case 40: // Arrow down\n        return this.handleKeyPress(e, this.onMoveDown)\n      case 38: // Arrow up\n        return this.handleKeyPress(e, this.onMoveUp)\n      case 13: // Enter\n        return this.handleKeyPress(e, this.onAddItem)\n      case 27: // Esc\n        return this.handleKeyPress(e, this.onClose)\n      default:\n        return null\n    }\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'event' implicitly has an 'any' type.\n  handleKeyPress = (event, keyHandler) => {\n    event.preventDefault()\n    event.stopPropagation()\n    keyHandler(event)\n  }\n\n  // Close the popover\n  // @ts-expect-error TS(7006) FIXME: Parameter 'e' implicitly has an 'any' type.\n  closePopover = (e) => {\n    // @ts-expect-error TS(2339) FIXME: Property 'selectNode' does not exist on type 'Sele... Remove this comment to see the full error message\n    if (this.selectNode && this.selectNode.contains(e.target)) {\n      return\n    }\n\n    const { isOpen } = this.state\n\n    if (isOpen) {\n      this.setState({\n        isOpen: false,\n        hoveredItem: undefined,\n      })\n    }\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'items' implicitly has an 'any' type.\n  updateItemsInState = (items, option, index) =>\n    index > -1\n      ? helper(items, {\n          [index]: {\n            selected: { $set: !option.selected },\n          },\n        })\n      : items\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'option' implicitly has an 'any' type.\n  handleSelectOption = (option, event) => {\n    // @ts-expect-error TS(2339) FIXME: Property 'onSelectClick' does not exist on type 'R... Remove this comment to see the full error message\n    const { onSelectClick, multiSelect } = this.props\n    const { items } = this.state\n    onSelectClick && onSelectClick(option, event)\n\n    // @ts-expect-error TS(7006) FIXME: Parameter 'x' implicitly has an 'any' type.\n    const selectedIndex = items.findIndex((x) => x.selected === true)\n\n    const deselectItems =\n      !multiSelect && selectedIndex > -1\n        ? helper(items, {\n            [selectedIndex]: {\n              selected: { $set: false },\n            },\n          })\n        : items\n\n    const optionIndex = deselectItems.findIndex(\n      // @ts-expect-error TS(7006) FIXME: Parameter 'x' implicitly has an 'any' type.\n      (x) => this.getItemId(x) === this.getItemId(option),\n    )\n\n    this.setState({\n      isOpen: multiSelect,\n      items: this.updateItemsInState(deselectItems, option, optionIndex),\n      // we need to copy the items to another array here in order to use that one during search\n      // filtering\n      selectedItems: this.updateItemsInState(\n        deselectItems,\n        option,\n        optionIndex,\n      ),\n    })\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'e' implicitly has an 'any' type.\n  onClick = (e) => {\n    e.stopPropagation()\n    e.nativeEvent.stopImmediatePropagation()\n    // @ts-expect-error TS(2339) FIXME: Property 'isSplit' does not exist on type 'Readonl... Remove this comment to see the full error message\n    if (this.props.isSplit && !this.props.disabled) {\n      // @ts-expect-error TS(2554) FIXME: Expected 0 arguments, but got 1.\n      this.onButtonClick(e)\n    }\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'e' implicitly has an 'any' type.\n  onKeyUp = (e) => {\n    e.stopPropagation()\n    e.nativeEvent.stopImmediatePropagation()\n    // @ts-expect-error TS(2339) FIXME: Property 'isSplit' does not exist on type 'Readonl... Remove this comment to see the full error message\n    if (this.props.isSplit && !this.props.disabled) {\n      const altPlusUp = e.altKey && ['Up', 'ArrowUp'].indexOf(e.key) >= 0\n      const altPlusDown = e.altKey && ['Down', 'ArrowDown'].indexOf(e.key) >= 0\n      const space = ['Space', ' '].indexOf(e.key) >= 0\n      const enter = ['Enter'].indexOf(e.key) >= 0\n      if (altPlusUp || altPlusDown || space || enter) {\n        e.preventDefault()\n        // @ts-expect-error TS(2554) FIXME: Expected 0 arguments, but got 1.\n        this.onButtonClick(e)\n      }\n    }\n  }\n\n  onButtonClick = () => {\n    const { isOpen } = this.state\n    // @ts-expect-error TS(2339) FIXME: Property 'isInputSearch' does not exist on type 'R... Remove this comment to see the full error message\n    const { isInputSearch, items } = this.props\n    this.setState(\n      {\n        isOpen: !isOpen,\n        items,\n      },\n      () => {\n        // @ts-expect-error TS(2339) FIXME: Property 'selectNode' does not exist on type 'Sele... Remove this comment to see the full error message\n        !isInputSearch && !isOpen && this.selectNode && this.selectNode.focus()\n        this.scrollToItem(\n          // @ts-expect-error TS(2339) FIXME: Property 'itemsNode' does not exist on type 'Selec... Remove this comment to see the full error message\n          this.itemsNode,\n          document.getElementById(this.getItemId(items[0])),\n        )\n      },\n    )\n  }\n\n  onMoveUp = () => {\n    // @ts-expect-error TS(2339) FIXME: Property 'hoveredItem' does not exist on type '{ i... Remove this comment to see the full error message\n    const { items, isCustomItemFocused, hoveredItem } = this.state\n    const itemsLength = items.length\n\n    for (\n      let i = hoveredItem - 1;\n      i < itemsLength && itemsLength > 0 && i >= 0;\n      i -= 1\n    ) {\n      if (items[i]) {\n        this.setState({ hoveredItem: i % itemsLength })\n        this.scrollToItem(\n          // @ts-expect-error TS(2339) FIXME: Property 'itemsNode' does not exist on type 'Selec... Remove this comment to see the full error message\n          this.itemsNode,\n          document.getElementById(this.getItemId(items[i])),\n        )\n        break\n      }\n    }\n\n    if (isCustomItemFocused) {\n      this.setState({ isCustomItemFocused: false })\n    }\n  }\n\n  onMoveDown = () => {\n    // @ts-expect-error TS(2339) FIXME: Property 'hoveredItem' does not exist on type '{ i... Remove this comment to see the full error message\n    const { items, hoveredItem } = this.state\n    // @ts-expect-error TS(2339) FIXME: Property 'hasCustomAction' does not exist on type ... Remove this comment to see the full error message\n    const { hasCustomAction } = this.props\n    const itemsLength = items.length\n\n    if (itemsLength === 0 && hasCustomAction) {\n      this.setState({ isCustomItemFocused: true })\n    }\n    if (!hoveredItem) {\n      this.setState(\n        {\n          hoveredItem: 0,\n        },\n        () => this.updateHoveredItemPosition(hoveredItem, itemsLength, items),\n      )\n    } else {\n      this.updateHoveredItemPosition(hoveredItem, itemsLength, items)\n    }\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'event' implicitly has an 'any' type.\n  onAddItem = (event) => {\n    // @ts-expect-error TS(2339) FIXME: Property 'multiSelect' does not exist on type 'Rea... Remove this comment to see the full error message\n    const { multiSelect } = this.props\n    // @ts-expect-error TS(2339) FIXME: Property 'hoveredItem' does not exist on type '{ i... Remove this comment to see the full error message\n    const { items, hoveredItem, isCustomItemFocused, searchValue } = this.state\n    const selectedItem = items[hoveredItem]\n\n    if (isCustomItemFocused) {\n      // @ts-expect-error TS(2339) FIXME: Property 'onCustomItemClick' does not exist on typ... Remove this comment to see the full error message\n      this.props.onCustomItemClick(searchValue)\n      this.setState({ isCustomItemFocused: false, isOpen: multiSelect })\n    }\n\n    if (selectedItem) {\n      selectedItem.onItemClick\n        ? this.handleSelectOption(selectedItem, selectedItem.onItemClick)\n        : this.handleSelectOption(selectedItem, event)\n    }\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'hoveredItem' implicitly has an 'any' ty... Remove this comment to see the full error message\n  updateHoveredItemPosition = (hoveredItem, itemsLength, items) => {\n    for (\n      let i = hoveredItem + 1;\n      i <= itemsLength && itemsLength > 0 && i > 0;\n      i += 1\n    ) {\n      if (i === itemsLength) {\n        this.setState({ hoveredItem: 0 })\n        this.scrollToItem(\n          // @ts-expect-error TS(2339) FIXME: Property 'itemsNode' does not exist on type 'Selec... Remove this comment to see the full error message\n          this.itemsNode,\n          document.getElementById(this.getItemId(items[i])),\n        )\n        break\n      }\n      if (items[i]) {\n        this.setState({ hoveredItem: i % itemsLength })\n        this.scrollToItem(\n          // @ts-expect-error TS(2339) FIXME: Property 'itemsNode' does not exist on type 'Selec... Remove this comment to see the full error message\n          this.itemsNode,\n          document.getElementById(this.getItemId(items[i])),\n        )\n        break\n      }\n    }\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'parent' implicitly has an 'any' type.\n  scrollToItem = (parent, child) => {\n    if (!parent || !child) return\n\n    // Where is the parent on page\n    const parentRect = parent.getBoundingClientRect()\n    // What can you see?\n    const parentViewableArea = {\n      height: parent.clientHeight,\n      width: parent.clientWidth,\n    }\n\n    // Where is the child\n    const childRect = child.getBoundingClientRect()\n    // Is the child viewable?\n    const isViewable =\n      childRect.top >= parentRect.top &&\n      childRect.top <= parentRect.top + parentViewableArea.height\n\n    // if you can't see the child try to scroll parent\n    if (!isViewable) {\n      // scroll by offset relative to parent\n      parent.scrollTop = childRect.top + parent.scrollTop - parentRect.top\n    }\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'item' implicitly has an 'any' type.\n  findItemInState = (item) => {\n    const { selectedItems } = this.state\n    // @ts-expect-error TS(7006) FIXME: Parameter 'x' implicitly has an 'any' type.\n    return selectedItems.find((x) => this.getItemId(x) === this.getItemId(item))\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'searchValue' implicitly has an 'any' ty... Remove this comment to see the full error message\n  onSearchChange = (searchValue) => {\n    // @ts-expect-error TS(2339) FIXME: Property 'items' does not exist on type 'Readonly<... Remove this comment to see the full error message\n    const { items, keyMap } = this.props\n    const searchField = keyMap ? keyMap.title : 'title'\n    const isFiltering = !!searchValue\n\n    // first, filter the items in the props that we get from the parent\n\n    // the items in the props don't have the {selected: true/false} information\n    // so we need to find out for each item in filteredProps if its selected or not\n\n    // that's why we made the selectedItems array in the state, to store that information\n    // and we need to check there to see, for each item, if its selected\n\n    const { startingWith, including } = items.reduce(\n      // @ts-expect-error TS(7006) FIXME: Parameter 'filtered' implicitly has an 'any' type.\n      (filtered, item) => {\n        const hideItemWhileSearching = isFiltering && !!item.hideOnSearch\n        if (hideItemWhileSearching) return filtered\n\n        if (\n          item[searchField].toLowerCase().startsWith(searchValue.toLowerCase())\n        ) {\n          return {\n            ...filtered,\n            startingWith: [\n              ...filtered.startingWith,\n              {\n                ...item,\n                selected:\n                  this.findItemInState(item) &&\n                  this.findItemInState(item).selected,\n              },\n            ],\n          }\n        }\n        if (\n          item[searchField].toLowerCase().includes(searchValue.toLowerCase())\n        ) {\n          return {\n            ...filtered,\n            including: [\n              ...filtered.including,\n              {\n                ...item,\n                selected:\n                  this.findItemInState(item) &&\n                  this.findItemInState(item).selected,\n              },\n            ],\n          }\n        }\n\n        return { ...filtered }\n      },\n      { startingWith: [], including: [] },\n    )\n\n    const arrayFinal = [...startingWith, ...including]\n\n    this.setState({\n      items: arrayFinal,\n      isFiltering,\n      searchValue,\n    })\n  }\n\n  onClose = () => {\n    // @ts-expect-error TS(2339) FIXME: Property 'onClose' does not exist on type 'Readonl... Remove this comment to see the full error message\n    const { onClose } = this.props\n    this.setState(\n      {\n        isOpen: false,\n        isFiltering: false,\n        hoveredItem: 0,\n      },\n      onClose && onClose(),\n    )\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'item' implicitly has an 'any' type.\n  getItemId = (item) => {\n    if (!item) return\n    // @ts-expect-error TS(2339) FIXME: Property 'keyMap' does not exist on type 'Readonly... Remove this comment to see the full error message\n    const { keyMap } = this.props\n    return item[keyMap && keyMap.id ? keyMap.id : 'id']\n  }\n\n  renderSelectButton = () => {\n    const {\n      // @ts-expect-error TS(2339) FIXME: Property 'isSplit' does not exist on type 'Readonl... Remove this comment to see the full error message\n      isSplit,\n      // @ts-expect-error TS(2339) FIXME: Property 'customButton' does not exist on type 'Re... Remove this comment to see the full error message\n      customButton,\n      // @ts-expect-error TS(2339) FIXME: Property 'type' does not exist on type 'Readonly<{... Remove this comment to see the full error message\n      type,\n      // @ts-expect-error TS(2339) FIXME: Property 'size' does not exist on type 'Readonly<{... Remove this comment to see the full error message\n      size,\n      // @ts-expect-error TS(2339) FIXME: Property 'disabled' does not exist on type 'Readon... Remove this comment to see the full error message\n      disabled,\n      // @ts-expect-error TS(2339) FIXME: Property 'icon' does not exist on type 'Readonly<{... Remove this comment to see the full error message\n      icon,\n      // @ts-expect-error TS(2339) FIXME: Property 'label' does not exist on type 'Readonly<... Remove this comment to see the full error message\n      label,\n      // @ts-expect-error TS(2339) FIXME: Property 'hasIconOnly' does not exist on type 'Rea... Remove this comment to see the full error message\n      hasIconOnly,\n      // @ts-expect-error TS(2339) FIXME: Property 'fullWidth' does not exist on type 'Reado... Remove this comment to see the full error message\n      fullWidth,\n      // @ts-expect-error TS(2339) FIXME: Property 'isInputSearch' does not exist on type 'R... Remove this comment to see the full error message\n      isInputSearch,\n      // @ts-expect-error TS(2339) FIXME: Property 'textToLeft' does not exist on type 'Read... Remove this comment to see the full error message\n      textToLeft,\n    } = this.props\n    const { items } = this.state\n\n    if (isSplit) {\n      return (\n        <ButtonSelect\n          type={type}\n          size={size}\n          disabled={disabled}\n          onClick={!disabled ? this.onButtonClick : undefined}\n        >\n          <ChevronDown\n            color={type === 'primary' && !disabled ? 'white' : 'grayDark'}\n          />\n        </ButtonSelect>\n      )\n    }\n    if (customButton && isInputSearch) {\n      return customButton(this.onButtonClick, this.onSearchChange)\n    }\n    if (customButton) {\n      return customButton(this.onButtonClick, null, this.state.isOpen)\n    }\n    if (hasIconOnly) {\n      return (\n        // @ts-expect-error TS(2740) FIXME: Type '{ type: string; icon: any; hasIconOnly: true... Remove this comment to see the full error message\n        <Button\n          type=\"text\"\n          icon={icon}\n          hasIconOnly\n          onClick={this.onButtonClick}\n          label=\"Click Me\"\n        />\n      )\n    }\n\n    return (\n      // @ts-expect-error TS(2740) FIXME: Type '{ size: any; items: any; disabled: any; type... Remove this comment to see the full error message\n      <Button\n        size={size}\n        items={items}\n        disabled={disabled}\n        type={type}\n        label={label}\n        icon={icon}\n        onClick={this.onButtonClick}\n        isSelect\n        fullWidth={fullWidth}\n        textToLeft={textToLeft}\n      />\n    )\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'length' implicitly has an 'any' type.\n  renderCustomActionItem = (length, onCustomItemClick, customItemLabel) => {\n    if (length === 0) {\n      return (\n        <CustomItemContainer\n          isCustomItemFocused={this.state.isCustomItemFocused}\n          onClick={() => onCustomItemClick(this.state.searchValue)}\n        >\n          {`${customItemLabel} ${this.state.searchValue}`}\n        </CustomItemContainer>\n      )\n    }\n  }\n\n  renderNoItems = (\n    // @ts-expect-error TS(7006) FIXME: Parameter 'hideSearch' implicitly has an 'any' typ... Remove this comment to see the full error message\n    hideSearch,\n    // @ts-expect-error TS(7006) FIXME: Parameter 'length' implicitly has an 'any' type.\n    length,\n    // @ts-expect-error TS(7006) FIXME: Parameter 'isInputSearch' implicitly has an 'any' ... Remove this comment to see the full error message\n    isInputSearch,\n    // @ts-expect-error TS(7006) FIXME: Parameter 'noResultsCustomMessage' implicitly has ... Remove this comment to see the full error message\n    noResultsCustomMessage,\n  ) => {\n    if (length === 0 && (!hideSearch || isInputSearch)) {\n      return <NoMatchesContainer>{noResultsCustomMessage}</NoMatchesContainer>\n    }\n  }\n\n  renderSelectPopup = () => {\n    const {\n      // @ts-expect-error TS(2339) FIXME: Property 'xPosition' does not exist on type 'Reado... Remove this comment to see the full error message\n      xPosition,\n      // @ts-expect-error TS(2339) FIXME: Property 'yPosition' does not exist on type 'Reado... Remove this comment to see the full error message\n      yPosition,\n      // @ts-expect-error TS(2339) FIXME: Property 'horizontalOffset' does not exist on type... Remove this comment to see the full error message\n      horizontalOffset,\n      // @ts-expect-error TS(2339) FIXME: Property 'hideSearch' does not exist on type 'Read... Remove this comment to see the full error message\n      hideSearch,\n      // @ts-expect-error TS(2339) FIXME: Property 'keyMap' does not exist on type 'Readonly... Remove this comment to see the full error message\n      keyMap,\n      // @ts-expect-error TS(2339) FIXME: Property 'searchPlaceholder' does not exist on typ... Remove this comment to see the full error message\n      searchPlaceholder,\n      // @ts-expect-error TS(2339) FIXME: Property 'hasIconOnly' does not exist on type 'Rea... Remove this comment to see the full error message\n      hasIconOnly,\n      // @ts-expect-error TS(2339) FIXME: Property 'marginTop' does not exist on type 'Reado... Remove this comment to see the full error message\n      marginTop,\n      // @ts-expect-error TS(2339) FIXME: Property 'multiSelect' does not exist on type 'Rea... Remove this comment to see the full error message\n      multiSelect,\n      // @ts-expect-error TS(2339) FIXME: Property 'hasCustomAction' does not exist on type ... Remove this comment to see the full error message\n      hasCustomAction,\n      // @ts-expect-error TS(2339) FIXME: Property 'onCustomItemClick' does not exist on typ... Remove this comment to see the full error message\n      onCustomItemClick,\n      // @ts-expect-error TS(2339) FIXME: Property 'customItemLabel' does not exist on type ... Remove this comment to see the full error message\n      customItemLabel,\n      // @ts-expect-error TS(2339) FIXME: Property 'fullWidth' does not exist on type 'Reado... Remove this comment to see the full error message\n      fullWidth,\n      // @ts-expect-error TS(2339) FIXME: Property 'capitalizeItemLabel' does not exist on t... Remove this comment to see the full error message\n      capitalizeItemLabel,\n      // @ts-expect-error TS(2339) FIXME: Property 'isInputSearch' does not exist on type 'R... Remove this comment to see the full error message\n      isInputSearch,\n      // @ts-expect-error TS(2339) FIXME: Property 'selectPopupVisible' does not exist on ty... Remove this comment to see the full error message\n      selectPopupVisible,\n      // @ts-expect-error TS(2339) FIXME: Property 'noResultsCustomMessage' does not exist o... Remove this comment to see the full error message\n      noResultsCustomMessage,\n      // @ts-expect-error TS(2339) FIXME: Property 'searchInputProps' does not exist on type... Remove this comment to see the full error message\n      searchInputProps,\n    } = this.props\n    // @ts-expect-error TS(2339) FIXME: Property 'hoveredItem' does not exist on type '{ i... Remove this comment to see the full error message\n    const { isOpen, hoveredItem, items, isFiltering } = this.state\n\n    return (\n      <SelectStyled\n        isOpen={isOpen || selectPopupVisible}\n        xPosition={xPosition}\n        yPosition={yPosition}\n        hasIconOnly={hasIconOnly}\n        marginTop={marginTop}\n        fullWidth={fullWidth}\n        horizontalOffset={horizontalOffset}\n      >\n        {!hideSearch && (items.length > 5 || isFiltering) && (\n          <SearchBarWrapper\n            id=\"searchInput\"\n            // @ts-expect-error TS(7006) FIXME: Parameter 'node' implicitly has an 'any' type.\n            ref={(node) => (this.searchInputNode = node)}\n          >\n            <SearchIcon />\n            <Search\n              // @ts-expect-error TS(2339) FIXME: Property 'searchInput' does not exist on type 'Sel... Remove this comment to see the full error message\n              ref={(node) => (this.searchInput = node)}\n              onChange={this.onSearchChange}\n              placeholder={searchPlaceholder}\n              isOpen={isOpen}\n              {...searchInputProps}\n            />\n          </SearchBarWrapper>\n        )}\n        {/* @ts-expect-error TS(7006) FIXME: Parameter 'itemsNode' implicitly has an 'any' type... Remove this comment to see the full error message */}\n        <SelectItems ref={(itemsNode) => (this.itemsNode = itemsNode)}>\n          {hasCustomAction\n            ? this.renderCustomActionItem(\n                items.length,\n                onCustomItemClick,\n                customItemLabel,\n              )\n            : this.renderNoItems(\n                hideSearch,\n                items.length,\n                isInputSearch,\n                noResultsCustomMessage,\n              )}\n          {}\n          {/* @ts-expect-error TS(7006) FIXME: Parameter 'item' implicitly has an 'any' type. */}\n          {items.map((item, idx) => [\n            item.hasDivider && (\n              <SelectItemDivider key={`${this.getItemId(item)}--divider`}>\n                {item.dividerTitle && (\n                  <SelectItemDividerTitle>\n                    {item.dividerTitle}\n                  </SelectItemDividerTitle>\n                )}\n              </SelectItemDivider>\n            ),\n            <SelectItem\n              hovered={hoveredItem === idx}\n              key={this.getItemId(item) + idx}\n              getItemId={this.getItemId}\n              item={item}\n              capitalizeItemLabel={capitalizeItemLabel}\n              keyMap={keyMap}\n              // @ts-expect-error TS(7006) FIXME: Parameter 'i' implicitly has an 'any' type.\n              hasSelectedItems={items.some((i) => i.selected)}\n              // @ts-expect-error TS(7006) FIXME: Parameter 'event' implicitly has an 'any' type.\n              onClick={(event) => this.handleSelectOption(item, event)}\n              onItemClick={() =>\n                this.handleSelectOption(item, item.onItemClick)\n              }\n              hideSearch={hideSearch}\n              multiSelect={multiSelect}\n            />,\n          ])}\n        </SelectItems>\n      </SelectStyled>\n    )\n  }\n\n  render() {\n    // @ts-expect-error TS(2339) FIXME: Property 'isSplit' does not exist on type 'Readonl... Remove this comment to see the full error message\n    const { isSplit, tooltip, disabled, fullWidth } = this.props\n\n    return (\n      <Wrapper\n        role=\"button\"\n        // @ts-expect-error TS(7006) FIXME: Parameter 'e' implicitly has an 'any' type.\n        onClick={(e) => this.onClick(e)}\n        // @ts-expect-error TS(7006) FIXME: Parameter 'e' implicitly has an 'any' type.\n        onKeyUp={(e) => this.onKeyUp(e)}\n        tabIndex={0}\n        isSplit={isSplit}\n        // @ts-expect-error TS(7006) FIXME: Parameter 'selectNode' implicitly has an 'any' typ... Remove this comment to see the full error message\n        ref={(selectNode) => (this.selectNode = selectNode)}\n        data-tip={disabled ? '' : tooltip}\n        fullWidth={fullWidth}\n        aria-haspopup=\"true\"\n        aria-expanded={this.state.isOpen}\n      >\n        {this.renderSelectButton()}\n        {this.renderSelectPopup()}\n      </Wrapper>\n    )\n  }\n}\n\n// @ts-expect-error TS(2339) FIXME: Property 'propTypes' does not exist on type 'typeo... Remove this comment to see the full error message\nSelect.propTypes = {\n  /** Is the button disabled */\n  disabled: PropTypes.bool,\n\n  /** Function to call on selected item click */\n  onSelectClick: PropTypes.func,\n\n  /** Label to display on the Select button */\n  label: PropTypes.string,\n\n  /** Items to display in the popup */\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      title: PropTypes.string,\n      /** If true, item will be hidden while searching */\n      hideOnSearch: PropTypes.bool,\n    }),\n  ).isRequired,\n\n  /** Is the Select component part of the Split Button */\n  isSplit: PropTypes.bool,\n\n  /** Type of the select component  */\n  type: PropTypes.oneOf(['primary', 'secondary']),\n\n  /** Size of the Button */\n  size: PropTypes.oneOf(['small', 'large', 'medium']),\n\n  /** Position of the popup right or left */\n  xPosition: PropTypes.oneOf(['right', 'left']),\n\n  /** Position of the popup top or bottom */\n  yPosition: PropTypes.oneOf(['top', 'bottom']),\n\n  /** Offset the popup horizontally */\n  horizontalOffset: PropTypes.string,\n\n  /** Icon to show in the Button */\n  icon: PropTypes.node,\n\n  /** Does the Select have a search bar */\n  hideSearch: PropTypes.bool,\n\n  /** Custom Button component */\n  customButton: PropTypes.func,\n\n  /** Custom keys to used in the Items array */\n  keyMap: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n  }),\n\n  /** Can the select have multiple items selected */\n  multiSelect: PropTypes.bool,\n\n  /** If false don't enable keyboard navigation */\n  shortcutsEnabled: PropTypes.bool,\n\n  /** Search placeholder */\n  searchPlaceholder: PropTypes.string,\n\n  /** Tooltip to show on the component */\n  tooltip: PropTypes.string,\n\n  /** Should the component be opened */\n  isOpen: PropTypes.bool,\n\n  /** Callback to be called when the Select menu gets closed */\n  onClose: PropTypes.func,\n\n  /** Does the button have only an icon and no label */\n  hasIconOnly: PropTypes.bool,\n\n  /** Space between the dropdown and the button */\n  marginTop: PropTypes.string,\n\n  /** Indicated whether the select has a custom action */\n  hasCustomAction: PropTypes.bool,\n\n  /** The custom action item */\n  onCustomItemClick: PropTypes.func,\n\n  /** A custom label for a custom item */\n  customItemLabel: PropTypes.string,\n\n  /** An array of objects containing HotKeys */\n  hotKeys: PropTypes.arrayOf(\n    PropTypes.shape({\n      hotKey: PropTypes.number,\n      onKeyPress: PropTypes.func,\n    }),\n  ),\n\n  /** Is the select full width */\n  fullWidth: PropTypes.bool,\n\n  /** Should capitalize Item Label */\n  capitalizeItemLabel: PropTypes.bool,\n\n  /** Boolean to check if the select is triggered by an input instead of a button */\n  isInputSearch: PropTypes.bool,\n\n  /** Indicates if the select popup should be visible */\n  selectPopupVisible: PropTypes.bool,\n\n  /** Custom message to display when no results were found */\n  noResultsCustomMessage: PropTypes.string,\n\n  /** Should clear the search field's value when the main input is blurred  */\n  clearSearchOnBlur: PropTypes.bool,\n\n  /** Prop */\n  searchInputProps: PropTypes.shape({}),\n\n  /** Aligns text in Select to the left  */\n  textToLeft: PropTypes.bool,\n\n  /** onOpen function to fire when the Select menu is open */\n  onOpen: PropTypes.func,\n}\n\n// @ts-expect-error TS(2339) FIXME: Property 'defaultProps' does not exist on type 'ty... Remove this comment to see the full error message\nSelect.defaultProps = {\n  label: '',\n  isSplit: false,\n  type: 'secondary',\n  size: 'medium',\n  xPosition: 'left',\n  yPosition: 'bottom',\n  horizontalOffset: undefined,\n  disabled: undefined,\n  icon: undefined,\n  hideSearch: false,\n  customButton: undefined,\n  onSelectClick: undefined,\n  keyMap: undefined,\n  multiSelect: false,\n  shortcutsEnabled: true,\n  searchPlaceholder: 'Search',\n  tooltip: undefined,\n  isOpen: false,\n  onClose: undefined,\n  hasIconOnly: false,\n  marginTop: undefined,\n  hasCustomAction: false,\n  onCustomItemClick: undefined,\n  customItemLabel: undefined,\n  hotKeys: undefined,\n  fullWidth: undefined,\n  capitalizeItemLabel: true,\n  isInputSearch: false,\n  selectPopupVisible: false,\n  noResultsCustomMessage: 'No matches found',\n  clearSearchOnBlur: false,\n  searchInputProps: {\n    clearSearchOnBlur: true,\n  },\n  textToLeft: false,\n  onOpen: null,\n}\n"]}