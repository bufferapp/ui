{"version":3,"file":"States.js","sourceRoot":"","sources":["../../../../src/components/States/States.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Text from '../Text/Text'\n\nconst Wrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n\nconst MediaWrapper = styled.div`\n  width: ${(props) => (props.size === 'large' ? '420px' : '300px')};\n  height: ${(props) => (props.size === 'large' ? '280px' : '200px')};\n`\n\nconst HeaderWrapper = styled.div`\n  h2 {\n    max-width: 700px;\n    overflow: hidden;\n    margin-top: 16px;\n    margin-bottom: 8px;\n    text-align: center;\n  }\n\n  h3 {\n    max-width: 400px;\n    overflow: hidden;\n    margin-top: 16px;\n    margin-bottom: 8px;\n    text-align: center;\n  }\n`\n\nconst DescriptionWrapper = styled.div`\n  p {\n    margin-top: 0px;\n    margin-bottom: 16px;\n    max-width: ${(props) => (props.size === 'large' ? '500px' : '400px')};\n    overflow: hidden;\n    text-align: center;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  width: 80%;\n  display: flex;\n  justify-content: center;\n\n  div:nth-child(2) {\n    margin-left: 8px;\n  }\n`\n\n// @ts-expect-error TS(2554) FIXME: Expected 1 arguments, but got 0.\nconst StatesContext = React.createContext()\n\nconst useStatesContext = () => {\n  const context = React.useContext(StatesContext)\n  if (!context) {\n    throw new Error(\n      `States compound components cannot be rendered outside the States component`,\n    )\n  }\n  return context\n}\n\n// @ts-expect-error TS(7031) FIXME: Binding element 'children' implicitly has an 'any'... Remove this comment to see the full error message\nconst States = ({ children, size }) => (\n  <StatesContext.Provider value={size}>\n    <Wrapper>{children}</Wrapper>\n  </StatesContext.Provider>\n)\n\nStates.propTypes = {\n  children: PropTypes.node.isRequired,\n  size: PropTypes.oneOf(['small', 'large']),\n}\n\nStates.defaultProps = {\n  size: 'large',\n}\n\n// @ts-expect-error TS(7031) FIXME: Binding element 'src' implicitly has an 'any' type... Remove this comment to see the full error message\nconst Image = ({ src, alt }) => {\n  const size = useStatesContext()\n  const height = size === 'large' ? 280 : 200\n  const width = size === 'large' ? 420 : 300\n  return (\n    <div>\n      <img src={src} alt={alt} width={width} height={height} />\n    </div>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired, // fix this prop type later\n}\n\nImage.defaultProps = {}\n\n// @ts-expect-error TS(7031) FIXME: Binding element 'children' implicitly has an 'any'... Remove this comment to see the full error message\nconst Media = ({ children }) => {\n  const size = useStatesContext()\n  return <MediaWrapper size={size}>{children}</MediaWrapper>\n}\n\nMedia.propTypes = {\n  children: PropTypes.node.isRequired, // fix this prop type later\n}\n\nMedia.defaultProps = {}\n\n// @ts-expect-error TS(7031) FIXME: Binding element 'children' implicitly has an 'any'... Remove this comment to see the full error message\nconst Header = ({ children }) => {\n  const size = useStatesContext()\n  return (\n    <HeaderWrapper>\n      {size === 'large' && <Text type=\"h2\">{children}</Text>}\n      {size === 'small' && <Text type=\"h3\">{children}</Text>}\n    </HeaderWrapper>\n  )\n}\n\nHeader.propTypes = {\n  children: PropTypes.node.isRequired, // fix this prop type later\n}\n\nHeader.defaultProps = {}\n\n// @ts-expect-error TS(7031) FIXME: Binding element 'children' implicitly has an 'any'... Remove this comment to see the full error message\nconst Description = ({ children }) => {\n  const size = useStatesContext()\n  return (\n    <DescriptionWrapper size={size}>\n      <Text type=\"p\">{children}</Text>\n    </DescriptionWrapper>\n  )\n}\n\nDescription.propTypes = {\n  children: PropTypes.node.isRequired, // fix this prop type later\n}\n\nDescription.defaultProps = {}\n\n// @ts-expect-error TS(7031) FIXME: Binding element 'children' implicitly has an 'any'... Remove this comment to see the full error message\nconst Buttons = ({ children }) => <ButtonWrapper>{children}</ButtonWrapper>\n\nButtons.propTypes = {\n  children: PropTypes.node.isRequired, // fix this prop type later\n}\n\nButtons.defaultProps = {}\n\nStates.Image = Image\nStates.Media = Media\nStates.Header = Header\nStates.Description = Description\nStates.Buttons = Buttons\n\nexport default States\n"]}