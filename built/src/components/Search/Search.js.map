{"version":3,"file":"Search.js","sourceRoot":"","sources":["../../../../src/components/Search/Search.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { SearchInput, SearchWrapper } from './style'\n\n/** Search input that filters the Select items and adds keyboard navigation */\nexport default class Search extends React.Component {\n  state = {\n    search: '',\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'prevProps' implicitly has an 'any' type... Remove this comment to see the full error message\n  componentDidUpdate(prevProps) {\n    // @ts-expect-error TS(2339) FIXME: Property 'isOpen' does not exist on type 'Readonly... Remove this comment to see the full error message\n    if (prevProps.isOpen !== this.props.isOpen) {\n      // @ts-expect-error TS(2339) FIXME: Property 'inputRef' does not exist on type 'Search... Remove this comment to see the full error message\n      setTimeout(() => this.inputRef.focus(), 50)\n    }\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'search' implicitly has an 'any' type.\n  updateSearch = (search) => {\n    this.setState({\n      search,\n    })\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'event' implicitly has an 'any' type.\n  onChange = (event) => {\n    // @ts-expect-error TS(2339) FIXME: Property 'onChange' does not exist on type 'Readon... Remove this comment to see the full error message\n    const { onChange } = this.props\n    const search = event.target.value\n\n    onChange(search)\n    this.updateSearch(search)\n  }\n\n  clearSearch = () => {\n    // @ts-expect-error TS(2339) FIXME: Property 'onChange' does not exist on type 'Readon... Remove this comment to see the full error message\n    const { onChange } = this.props\n\n    onChange('')\n    this.updateSearch('')\n  }\n\n  render() {\n    const {\n      // @ts-expect-error TS(2339) FIXME: Property 'placeholder' does not exist on type 'Rea... Remove this comment to see the full error message\n      placeholder,\n      // @ts-expect-error TS(2339) FIXME: Property 'onClick' does not exist on type 'Readonl... Remove this comment to see the full error message\n      onClick,\n      // @ts-expect-error TS(2339) FIXME: Property 'height' does not exist on type 'Readonly... Remove this comment to see the full error message\n      height,\n      // @ts-expect-error TS(2339) FIXME: Property 'clearSearchOnBlur' does not exist on typ... Remove this comment to see the full error message\n      clearSearchOnBlur,\n      // @ts-expect-error TS(2339) FIXME: Property 'clearSearchOnFocus' does not exist on ty... Remove this comment to see the full error message\n      clearSearchOnFocus,\n    } = this.props\n\n    const { search } = this.state\n\n    return (\n      <SearchWrapper>\n        <SearchInput\n          placeholder={placeholder}\n          type=\"text\"\n          value={search}\n          // @ts-expect-error TS(7006) FIXME: Parameter 'inputRef' implicitly has an 'any' type.\n          ref={(inputRef) => (this.inputRef = inputRef)}\n          // @ts-expect-error TS(7006) FIXME: Parameter 'event' implicitly has an 'any' type.\n          onChange={(event) => this.onChange(event)}\n          onClick={onClick}\n          onBlur={clearSearchOnBlur ? this.clearSearch : undefined}\n          onFocus={clearSearchOnFocus ? this.clearSearch : undefined}\n          height={height}\n        />\n      </SearchWrapper>\n    )\n  }\n}\n\n// @ts-expect-error TS(2339) FIXME: Property 'propTypes' does not exist on type 'typeo... Remove this comment to see the full error message\nSearch.propTypes = {\n  /** Search placeholder */\n  placeholder: PropTypes.string,\n\n  /** Function to call on search input change */\n  onChange: PropTypes.func.isRequired,\n\n  /** Is the select menu open */\n  isOpen: PropTypes.bool,\n\n  /** Is onClick event */\n  onClick: PropTypes.func,\n\n  /** Input height */\n  height: PropTypes.string,\n\n  /** Should the search clear on blur */\n  clearSearchOnBlur: PropTypes.bool,\n\n  /** Should the search clear on focus */\n  clearSearchOnFocus: PropTypes.bool,\n\n  /** Is onBlur event */\n  onBlur: PropTypes.func,\n}\n\n// @ts-expect-error TS(2339) FIXME: Property 'defaultProps' does not exist on type 'ty... Remove this comment to see the full error message\nSearch.defaultProps = {\n  placeholder: '',\n  height: 'tall',\n  isOpen: false,\n  clearSearchOnBlur: false,\n  clearSearchOnFocus: false,\n  onClick: () => {},\n  onBlur: () => {},\n}\n"]}