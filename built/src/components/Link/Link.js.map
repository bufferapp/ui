{"version":3,"file":"Link.js","sourceRoot":"","sources":["../../../../src/components/Link/Link.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,SAAS,MAAM,YAAY,CAAA;AAElC,OAAO,EAAE,UAAU,EAAE,MAAM,SAAS,CAAA;AACpC,OAAO,EAAE,gBAAgB,EAAE,MAAM,gBAAgB,CAAA;AAEjD,MAAM,IAAI,GAAG,CAAC,EAEZ,QAAQ,EAER,IAAI,EAEJ,MAAM,EAEN,QAAQ,EAER,SAAS,EAET,KAAK,EAEL,UAAU,GACX,EAAE,EAAE,CAAC,CACJ,oBAAC,UAAU,IACT,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EACnC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,SAAS,EAC/C,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,SAAS,EACpB,KAAK,EAAE,KAAK,EACZ,UAAU,EAAE,UAAU,IAErB,QAAQ,CACE,CACd,CAAA;AAED,IAAI,CAAC,SAAS,GAAG;IAEf,QAAQ,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU;IAEnC,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;IAEjC,MAAM,EAAE,SAAS,CAAC,IAAI;IAEtB,QAAQ,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;IAEjE,SAAS,EAAE,SAAS,CAAC,MAAM;IAE3B,KAAK,EAAE,SAAS,CAAC,MAAM;IAEvB,UAAU,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CACxC,CAAA;AAED,IAAI,CAAC,YAAY,GAAG;IAClB,MAAM,EAAE,KAAK;IACb,QAAQ,EAAE,KAAK;IACf,SAAS,EAAE,SAAS;IACpB,KAAK,EAAE,EAAE;IACT,UAAU,EAAE,gBAAgB;CAC7B,CAAA;AAED,eAAe,IAAI,CAAA","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { LinkStyled } from './style'\nimport { fontWeightMedium } from '../style/fonts'\n\nconst Link = ({\n  // @ts-expect-error TS(7031) FIXME: Binding element 'children' implicitly has an 'any'... Remove this comment to see the full error message\n  children,\n  // @ts-expect-error TS(7031) FIXME: Binding element 'href' implicitly has an 'any' typ... Remove this comment to see the full error message\n  href,\n  // @ts-expect-error TS(7031) FIXME: Binding element 'newTab' implicitly has an 'any' t... Remove this comment to see the full error message\n  newTab,\n  // @ts-expect-error TS(7031) FIXME: Binding element 'download' implicitly has an 'any'... Remove this comment to see the full error message\n  download,\n  // @ts-expect-error TS(7031) FIXME: Binding element 'className' implicitly has an 'any... Remove this comment to see the full error message\n  className,\n  // @ts-expect-error TS(7031) FIXME: Binding element 'title' implicitly has an 'any' ty... Remove this comment to see the full error message\n  title,\n  // @ts-expect-error TS(7031) FIXME: Binding element 'fontWeight' implicitly has an 'an... Remove this comment to see the full error message\n  fontWeight,\n}) => (\n  <LinkStyled\n    href={href}\n    target={newTab ? '_blank' : '_self'}\n    rel={newTab ? 'noopener noreferrer' : undefined}\n    download={download}\n    className={className}\n    title={title}\n    fontWeight={fontWeight}\n  >\n    {children}\n  </LinkStyled>\n)\n\nLink.propTypes = {\n  /** Linkable content. */\n  children: PropTypes.node.isRequired,\n  /** Url to navigate to. */\n  href: PropTypes.string.isRequired,\n  /** Opens new tab. */\n  newTab: PropTypes.bool,\n  /** Saves the linked URL instead of navigating to it. */\n  download: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  /** Class passed by the DOM element. */\n  className: PropTypes.string,\n  /** Title of the link. */\n  title: PropTypes.string,\n  /** Font weight of the link. */\n  fontWeight: PropTypes.oneOf([500, 700]),\n}\n\nLink.defaultProps = {\n  newTab: false,\n  download: false,\n  className: undefined,\n  title: '',\n  fontWeight: fontWeightMedium,\n}\n\nexport default Link\n"]}