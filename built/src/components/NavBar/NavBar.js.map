{"version":3,"file":"NavBar.js","sourceRoot":"","sources":["../../../../src/components/NavBar/NavBar.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport {\n  Cross,\n  Info as InfoIcon,\n  ArrowLeft,\n  Person as PersonIcon,\n  Instagram as InstagramIcon,\n  Twitter as TwitterIcon,\n  Facebook as FacebookIcon,\n  Pinterest as PinterestIcon,\n  LinkedIn as LinkedInIcon,\n} from '../Icon'\n\nimport {\n  gray,\n  blueDarker,\n  grayLight,\n  grayLighter,\n  grayDark,\n} from '../style/colors'\n\nimport { fontWeightMedium, fontFamily } from '../style/fonts'\n\nimport Link from '../Link'\nimport DropdownMenu from '../DropdownMenu'\n\nimport BufferLogo from './BufferLogo'\nimport NavBarMenu from './NavBarMenu/NavBarMenu'\nimport NavBarProducts from './NavBarProducts/NavBarProducts'\n\n// @ts-expect-error TS(7006) FIXME: Parameter 'baseUrl' implicitly has an 'any' type.\nexport function getProductPath(baseUrl) {\n  const result = baseUrl.match(/https*:\\/\\/(.+)\\.buffer\\.com/)\n  let productPath = baseUrl\n  if (result instanceof Array) {\n    ;[, productPath] = result\n  }\n  return productPath\n}\n\n// @ts-expect-error TS(7006) FIXME: Parameter 'baseUrl' implicitly has an 'any' type.\nfunction getRedirectUrl(baseUrl) {\n  const productPath = getProductPath(baseUrl)\n  return `https://${productPath}.buffer.com`\n}\n\nexport function getLogoutUrl(baseUrl = '') {\n  const productPath = getProductPath(baseUrl)\n  return `https://login${\n    productPath.includes('local') ? '.local' : ''\n  }.buffer.com/logout?redirect=${getRedirectUrl(baseUrl)}`\n}\n\n// @ts-expect-error TS(7006) FIXME: Parameter 'user' implicitly has an 'any' type.\nexport function getAccountUrl(baseUrl = '', user) {\n  return `https://account.buffer.com?redirect=${getRedirectUrl(\n    baseUrl,\n  )}&username=${encodeURI(user.name)}`\n}\n\nexport const ORG_SWITCHER = 'org_switcher'\n\nexport function getStopImpersonationUrl() {\n  const { hostname } = window.location\n  if (!hostname.endsWith('buffer.com')) {\n    return null\n  }\n\n  return `https://admin${\n    hostname.includes('local') ? '-next.local' : ''\n  }.buffer.com/clearImpersonation`\n}\n\nconst NavBarStyled = styled.nav`\n  background: #fff;\n  border-bottom: 1px solid ${gray};\n  box-shadow: 0 1px 10px -5px rgba(0, 0, 0, 0.15);\n  display: flex;\n  height: 56px;\n  justify-content: space-between;\n  position: relative;\n  width: 100vw;\n`\n\nconst NavBarLeft = styled.div`\n  display: flex;\n`\nconst NavBarRight = styled.nav`\n  display: flex;\n`\n\nconst NavBarHelp = styled.a`\n  align-items: center;\n  color: #fff;\n  color: ${(props) => (props.active ? blueDarker : grayDark)};\n  display: flex;\n  font-size: 16px;\n  font-family: ${fontFamily};\n  font-weight: ${fontWeightMedium};\n  height: 100%;\n  padding: 0 24px;\n  position: relative;\n  text-decoration: none;\n  z-index: 2;\n  &:hover {\n    color: ${(props) => (props.active ? blueDarker : grayDark)};\n    background-color: ${grayLighter};\n  }\n  cursor: pointer;\n`\n\nconst NavBarHelpText = styled.span`\n  margin-left: 8px;\n`\n\nconst NavBarVerticalRule = styled.div`\n  background-color: ${grayLight};\n  height: 24px;\n  margin-left: -1px;\n  margin-right: -1px;\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 1px;\n  z-index: 1;\n`\n\n/**\n * A11Y feature: A skip to main content link appears when a user is on a screen reader\n * and the link is in focus. To work properly, each page will need to have an element with the id main\n * example: <main id=\"main\"></main> This feature is optional\n */\nconst SkipToMainLink = styled(Link)`\n  position: absolute;\n  top: -1000px;\n  left: -1000px;\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n\n  :focus {\n    left: auto;\n    top: auto;\n    position: relative;\n    height: auto;\n    width: auto;\n    overflow: visible;\n    margin: auto;\n    margin-left: 10px;\n  }\n`\n\n// @ts-expect-error TS(7006) FIXME: Parameter 'ignoreMenuItems' implicitly has an 'any... Remove this comment to see the full error message\nexport function appendMenuItem(ignoreMenuItems, menuItem) {\n  if (!ignoreMenuItems) {\n    return menuItem\n  }\n\n  return ignoreMenuItems.includes(menuItem.id) ? null : menuItem\n}\n\n// @ts-expect-error TS(7006) FIXME: Parameter 'item' implicitly has an 'any' type.\nfunction getNetworkIcon(item) {\n  if (!item.network) return null\n\n  switch (item.network) {\n    case 'instagram':\n      return <InstagramIcon size=\"medium\" />\n    case 'twitter':\n      return <TwitterIcon size=\"medium\" />\n    case 'facebook':\n      return <FacebookIcon size=\"medium\" />\n    case 'pinterest':\n      return <PinterestIcon size=\"medium\" />\n    case 'linkedin':\n      return <LinkedInIcon size=\"medium\" />\n    default:\n      break\n  }\n}\n\n// @ts-expect-error TS(7006) FIXME: Parameter 'orgSwitcher' implicitly has an 'any' ty... Remove this comment to see the full error message\nexport function appendOrgSwitcher(orgSwitcher) {\n  if (!orgSwitcher || !orgSwitcher.menuItems) {\n    return []\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'item' implicitly has an 'any' type.\n  return orgSwitcher.menuItems.map((item, index) => {\n    item.type = ORG_SWITCHER\n    if (orgSwitcher.title && index === 0) {\n      item.hasDivider = true\n      item.dividerTitle = orgSwitcher.title\n    }\n    if (item.subItems) {\n      // @ts-expect-error TS(7006) FIXME: Parameter 'subItem' implicitly has an 'any' type.\n      item.subItems.forEach((subItem) => {\n        subItem.icon = getNetworkIcon(subItem)\n      })\n    }\n    if (!item.subItems || item.subItems.length === 0) {\n      item.defaultTooltipMessage = 'No channels connected yet.'\n    }\n\n    return item\n  })\n}\n\n/**\n * The NavBar is not consumed alone, but instead is used by the AppShell component. Go check out the AppShell component to learn more.\n */\nclass NavBar extends React.Component {\n  // @ts-expect-error TS(7006) FIXME: Parameter 'nextProps' implicitly has an 'any' type... Remove this comment to see the full error message\n  shouldComponentUpdate(nextProps) {\n    return (\n      // @ts-expect-error TS(2339) FIXME: Property 'user' does not exist on type 'Readonly<{... Remove this comment to see the full error message\n      nextProps.user.name !== this.props.user.name ||\n      // @ts-expect-error TS(2339) FIXME: Property 'user' does not exist on type 'Readonly<{... Remove this comment to see the full error message\n      nextProps.user.email !== this.props.user.email ||\n      // @ts-expect-error TS(2339) FIXME: Property 'isImpersonation' does not exist on type ... Remove this comment to see the full error message\n      nextProps.isImpersonation !== this.props.isImpersonation ||\n      // @ts-expect-error TS(2339) FIXME: Property 'products' does not exist on type 'Readon... Remove this comment to see the full error message\n      nextProps.products !== this.props.products ||\n      // @ts-expect-error TS(2339) FIXME: Property 'orgSwitcher' does not exist on type 'Rea... Remove this comment to see the full error message\n      nextProps.orgSwitcher !== this.props.orgSwitcher\n    )\n  }\n\n  render() {\n    const {\n      // @ts-expect-error TS(2339) FIXME: Property 'products' does not exist on type 'Readon... Remove this comment to see the full error message\n      products,\n      // @ts-expect-error TS(2339) FIXME: Property 'activeProduct' does not exist on type 'R... Remove this comment to see the full error message\n      activeProduct,\n      // @ts-expect-error TS(2339) FIXME: Property 'user' does not exist on type 'Readonly<{... Remove this comment to see the full error message\n      user,\n      // @ts-expect-error TS(2339) FIXME: Property 'helpMenuItems' does not exist on type 'R... Remove this comment to see the full error message\n      helpMenuItems,\n      // @ts-expect-error TS(2339) FIXME: Property 'onLogout' does not exist on type 'Readon... Remove this comment to see the full error message\n      onLogout,\n      // @ts-expect-error TS(2339) FIXME: Property 'displaySkipLink' does not exist on type ... Remove this comment to see the full error message\n      displaySkipLink,\n      // @ts-expect-error TS(2339) FIXME: Property 'isImpersonation' does not exist on type ... Remove this comment to see the full error message\n      isImpersonation,\n      // @ts-expect-error TS(2339) FIXME: Property 'orgSwitcher' does not exist on type 'Rea... Remove this comment to see the full error message\n      orgSwitcher,\n    } = this.props\n\n    const orgSwitcherHasItems =\n      orgSwitcher && orgSwitcher.menuItems && orgSwitcher.menuItems.length > 0\n\n    return (\n      <NavBarStyled aria-label=\"Main menu\">\n        <NavBarLeft>\n          {displaySkipLink && (\n            <SkipToMainLink href=\"#main\">Skip to main content</SkipToMainLink>\n          )}\n          <BufferLogo />\n          <NavBarVerticalRule />\n          <NavBarProducts products={products} activeProduct={activeProduct} />\n        </NavBarLeft>\n        <NavBarRight>\n          {helpMenuItems && (\n            <DropdownMenu\n              // @ts-expect-error TS(2322) FIXME: Type '{ xPosition: string; ariaLabel: string; aria... Remove this comment to see the full error message\n              xPosition=\"right\"\n              ariaLabel=\"Help Menu\"\n              ariaLabelPopup=\"Help\"\n              menubarItem={(\n                <NavBarHelp>\n                  <InfoIcon />\n                  <NavBarHelpText>Help</NavBarHelpText>\n                </NavBarHelp>\n)}\n              items={helpMenuItems}\n            />\n          )}\n          <NavBarVerticalRule />\n          <DropdownMenu\n            // @ts-expect-error TS(2322) FIXME: Type '{ xPosition: string; ariaLabel: string; aria... Remove this comment to see the full error message\n            xPosition=\"right\"\n            ariaLabel=\"Account Menu\"\n            ariaLabelPopup=\"Account\"\n            horizontalOffset=\"-16px\"\n            isImpersonation={isImpersonation}\n            menubarItem={\n              <NavBarMenu user={user} isImpersonation={isImpersonation} />\n            }\n            items={[\n              ...appendOrgSwitcher(orgSwitcher),\n              appendMenuItem(user.ignoreMenuItems, {\n                id: 'account',\n                title: 'Account',\n                icon: <PersonIcon color={gray} />,\n                hasDivider: orgSwitcherHasItems,\n                onItemClick: () => {\n                  window.location.assign(\n                    // @ts-expect-error TS(2339) FIXME: Property 'user' does not exist on type 'Readonly<{... Remove this comment to see the full error message\n                    getAccountUrl(window.location.href, this.props.user),\n                  )\n                },\n              }),\n              ...user.menuItems,\n              appendMenuItem(\n                user.ignoreMenuItems,\n                isImpersonation\n                  ? {\n                      id: 'Stop Impersonation',\n                      title: 'Stop Impersonation',\n                      icon: <Cross color={gray} />,\n                      hasDivider: user.menuItems && user.menuItems.length > 0,\n                      onItemClick: () => {\n                        // @ts-expect-error TS(2345) FIXME: Argument of type 'string | null' is not assignable... Remove this comment to see the full error message\n                        window.location.assign(getStopImpersonationUrl())\n                      },\n                    }\n                  : {\n                      id: 'logout',\n                      title: 'Logout',\n                      icon: <ArrowLeft color={gray} />,\n                      hasDivider: user.menuItems && user.menuItems.length > 0,\n                      onItemClick: () => {\n                        if (typeof onLogout === 'function') onLogout()\n                        window.location.assign(\n                          getLogoutUrl(window.location.href),\n                        )\n                      },\n                    },\n              ),\n            ].filter((e) => e)}\n          />\n        </NavBarRight>\n      </NavBarStyled>\n    )\n  }\n}\n\n// @ts-expect-error TS(2339) FIXME: Property 'propTypes' does not exist on type 'typeo... Remove this comment to see the full error message\nNavBar.propTypes = {\n  /** The list of available products */\n  products: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      isNew: PropTypes.bool,\n      href: PropTypes.string,\n    }),\n  ),\n\n  /** The currently active (highlighted) product in the `NavBar`. */\n  activeProduct: PropTypes.oneOf(['publish', 'analyze', 'engage']),\n\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    /** If missing we will use Gravatar to get the user avatar by email */\n    avatar: PropTypes.string,\n    /** If missing we will use Gravatar to get the user avatar by email */\n    ignoreMenuItems: PropTypes.arrayOf(PropTypes.string),\n    menuItems: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        component: PropTypes.func,\n        hasDivider: PropTypes.bool,\n        onItemClick: PropTypes.func,\n      }),\n    ).isRequired,\n  }).isRequired,\n  helpMenuItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      component: PropTypes.node,\n      hasDivider: PropTypes.bool,\n      onItemClick: PropTypes.func,\n    }),\n  ),\n  isImpersonation: PropTypes.bool,\n\n  onLogout: PropTypes.func,\n  displaySkipLink: PropTypes.bool,\n\n  /** Optional menu for selecting the user's organization */\n  orgSwitcher: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    menuItems: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        selected: PropTypes.bool.isRequired,\n        onItemClick: PropTypes.func,\n      }),\n    ).isRequired,\n  }),\n}\n\n// @ts-expect-error TS(2339) FIXME: Property 'defaultProps' does not exist on type 'ty... Remove this comment to see the full error message\nNavBar.defaultProps = {\n  products: [],\n  activeProduct: undefined,\n  helpMenuItems: null,\n  isImpersonation: false,\n  onLogout: undefined,\n  displaySkipLink: false,\n  orgSwitcher: undefined,\n}\n\nexport default NavBar\n"]}