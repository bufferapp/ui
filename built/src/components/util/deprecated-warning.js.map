{"version":3,"file":"deprecated-warning.js","sourceRoot":"","sources":["../../../../src/components/util/deprecated-warning.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAA;AAGjC,SAAS,GAAG,CAAC,GAAG;IACd,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,EAAE;QAC1C,OAAO,CAAC,IAAI,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAA;KAC3C;AACH,CAAC;AAOD,MAAM,UAAU,oBAAoB,CAAC,GAAG;IACtC,SAAS,CAAC,GAAG,EAAE;QACb,GAAG,CAAC,GAAG,CAAC,CAAA;IACV,CAAC,EAAE,EAAE,CAAC,CAAA;AACR,CAAC;AAQD,MAAM,UAAU,iBAAiB,CAAC,GAAG;IACnC,GAAG,CAAC,GAAG,CAAC,CAAA;AACV,CAAC","sourcesContent":["/* eslint-disable no-console */\nimport { useEffect } from 'react'\n\n// @ts-expect-error TS(7006) FIXME: Parameter 'msg' implicitly has an 'any' type.\nfunction log(msg) {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(`❌ Deprecation Warning`, msg)\n  }\n}\n\n/**\n * React hook for deprecation warning (for functional components)\n * @param {String} msg\n */\n// @ts-expect-error TS(7006) FIXME: Parameter 'msg' implicitly has an 'any' type.\nexport function useDeprecatedWarning(msg) {\n  useEffect(() => {\n    log(msg)\n  }, [])\n}\n\n/**\n * Print deprecation warning (for class components)\n * Call from `componentDidMount()`\n * @param {String} msg\n */\n// @ts-expect-error TS(7006) FIXME: Parameter 'msg' implicitly has an 'any' type.\nexport function deprecatedWarning(msg) {\n  log(msg)\n}\n"]}