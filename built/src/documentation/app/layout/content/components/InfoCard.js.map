{"version":3,"file":"InfoCard.js","sourceRoot":"","sources":["../../../../../../../src/documentation/app/layout/content/components/InfoCard.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,SAAS,MAAM,YAAY,CAAA;AAClC,OAAO,MAAM,MAAM,mBAAmB,CAAA;AAEtC,MAAM,WAAW,GAAG,MAAM,CAAC,GAAG,CAAA;;;;;;;;kBAQZ,CAAC,KAAK,EAAE,EAAE,CACxB,KAAK,CAAC,KAAK,KAAK,OAAO;IACrB,CAAC,CAAC,SAAS;IACX,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,KAAK;QACvB,CAAC,CAAC,SAAS;QACX,CAAC,CAAC,SAAS;CAChB,CAAA;AAED,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAA;WAChB,CAAC,KAAK,EAAE,EAAE,CACjB,KAAK,CAAC,KAAK,KAAK,OAAO;IACrB,CAAC,CAAC,SAAS;IACX,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,KAAK;QACvB,CAAC,CAAC,SAAS;QACX,CAAC,CAAC,SAAS;CAChB,CAAA;AAED,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAA;;;;;;;CAO3B,CAAA;AAED,MAAM,eAAe,GAAG,MAAM,CAAC,CAAC,CAAA;;CAE/B,CAAA;AAID,MAAM,QAAQ,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CAC/C,oBAAC,WAAW,IAAC,KAAK,EAAE,KAAK;IACvB,oBAAC,QAAQ,IAAC,KAAK,EAAE,KAAK,GAAI;IACzB,KAAK,IAAI,oBAAC,SAAS,QAAE,KAAK,CAAa;IACxC,oBAAC,eAAe,QAAE,QAAQ,CAAmB,CACjC,CACf,CAAA;AAED,QAAQ,CAAC,YAAY,GAAG;IACtB,KAAK,EAAE,IAAI;IACX,QAAQ,EAAE,EAAE;CACb,CAAA;AAED,QAAQ,CAAC,SAAS,GAAG;IACnB,KAAK,EAAE,SAAS,CAAC,MAAM;IACvB,QAAQ,EAAE,SAAS,CAAC,MAAM;IAC1B,KAAK,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;CACnC,CAAA;AAED,eAAe,QAAQ,CAAA","sourcesContent":["/* eslint-disable no-nested-ternary */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst CardWrapper = styled.div`\n  display: block;\n  position: relative;\n  background-color: rgb(245, 247, 249);\n  margin: 32px 0px;\n  padding: 24px 24px 24px 50px;\n  border-left: 4px solid;\n  border-radius: 3px;\n  border-color: ${(props) =>\n    props.color === 'green'\n      ? '#26cb7c'\n      : props.color === 'red'\n      ? '#ff504b'\n      : '#f77d05'};\n`\n\nconst CardIcon = styled.div`\n  color: ${(props) =>\n    props.color === 'green'\n      ? '#26cb7c'\n      : props.color === 'red'\n      ? '#ff504b'\n      : '#f77d05'};\n`\n\nconst CardTitle = styled.div`\n  font-size: 16px;  \n  position: relative;\n  margin: 0px;\n  margin-bottom: 24px;\n  color: inherit;\n  font-weight 700;\n`\n\nconst CardDescription = styled.p`\n  font-size: 14px;\n`\n\n/** Info blocks in red, green or orange colors */\n// @ts-expect-error TS(7031) FIXME: Binding element 'color' implicitly has an 'any' ty... Remove this comment to see the full error message\nconst InfoCard = ({ color, title, children }) => (\n  <CardWrapper color={color}>\n    <CardIcon color={color} />\n    {title && <CardTitle>{title}</CardTitle>}\n    <CardDescription>{children}</CardDescription>\n  </CardWrapper>\n)\n\nInfoCard.defaultProps = {\n  title: null,\n  children: '',\n}\n\nInfoCard.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.string,\n  color: PropTypes.string.isRequired,\n}\n\nexport default InfoCard\n"]}