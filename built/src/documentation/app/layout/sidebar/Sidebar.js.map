{"version":3,"file":"Sidebar.js","sourceRoot":"","sources":["../../../../../../src/documentation/app/layout/sidebar/Sidebar.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-nested-ternary */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n// @ts-expect-error TS(2307) FIXME: Cannot find module '@bufferapp/ui/Icon' or its cor... Remove this comment to see the full error message\nimport { ChevronDown, ChevronUp } from '@bufferapp/ui/Icon'\nimport helper from 'immutability-helper'\n\nconst SidebarWrapper = styled.div`\n  z-index: 15;\n  background: #f5f7f9;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  width: 250px;\n  overflow-x: hidden;\n  height: calc(100vh - 65px);\n  padding: 0 0 0 1rem;\n  border-right: 1px solid #e6ecf1;\n  overflow-y: auto;\n`\n\nconst SidebarList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  display: block;\n  margin: 0px;\n  padding: 0px;\n  width: 100%;\n  padding-bottom: 24px;\n  font-size: 15px;\n  margin-top: 32px;\n  transform: translateX(1px);\n`\n\nconst SidebarListItem = styled.li`\n  text-decoration: none;\n  color: #636363;\n  margin-left: 0px;\n  display: flex;\n  align-items: center;\n  margin: 0px;\n  padding: 0px;\n  position: relative;\n  cursor: pointer;\n  padding-left: ${(props) => (props.level === 1 ? '20px' : '12px')};\n  &:hover {\n    background: #ffffff77;\n    border-radius: 4px 0 0 4px;\n  }\n  background: ${(props) => (props.isSelected ? '#fff' : 'none')};\n`\n\nconst SidebarListItemLink = styled(Link)`\n  text-decoration: none;\n  position: relative;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  font-weight: ${(props) =>\n    props['data-is-child'] && !props['data-is-selected'] ? '500' : '600'};\n  cursor: pointer;\n  font-size: 16px;\n  color: ${(props) =>\n    props['data-is-selected']\n      ? '#2c4bff'\n      : props['data-is-child']\n      ? '#9daab6'\n      : 'inherit'};\n  padding: ${(props) =>\n    props['data-is-child'] ? '10px 24px 10px 15px' : '5px 24px 5px 15px'};\n  width: 100%;\n  padding: 8px 0;\n  transition: all 0.1s ease-out;\n`\n\nconst IconDown = styled(ChevronDown)`\n  margin-left: auto;\n  cursor: pointer;\n  padding-right: 16px;\n  opacity: 0.35;\n`\n\nconst IconUp = styled(ChevronUp)`\n  margin-left: auto;\n  cursor: pointer;\n  padding-right: 16px;\n  opacity: 0.35;\n`\n\n/** The left sidebar that displays the navigation links */\nclass Sidebar extends React.Component {\n  // @ts-expect-error TS(7006) FIXME: Parameter 'props' implicitly has an 'any' type.\n  constructor(props) {\n    super(props)\n    this.state = {\n      navigationLinks: props.navigationLinks,\n    }\n  }\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'link' implicitly has an 'any' type.\n  toggleNavigationLink = (link) => {\n    // @ts-expect-error TS(2339) FIXME: Property 'navigationLinks' does not exist on type ... Remove this comment to see the full error message\n    const { navigationLinks } = this.state\n\n    this.setState({\n      navigationLinks: helper(navigationLinks, {\n        // @ts-expect-error TS(7006) FIXME: Parameter 'x' implicitly has an 'any' type.\n        [navigationLinks.findIndex((x) => x.id === link.id)]: {\n          isExpanded: { $set: !link.isExpanded },\n        },\n      }),\n    })\n  }\n\n  render() {\n    // @ts-expect-error TS(2339) FIXME: Property 'navigationLinks' does not exist on type ... Remove this comment to see the full error message\n    const { navigationLinks } = this.state\n    // @ts-expect-error TS(2339) FIXME: Property 'route' does not exist on type 'Readonly<... Remove this comment to see the full error message\n    const { route } = this.props\n\n    return (\n      <SidebarWrapper>\n        <SidebarList>\n          {/* @ts-expect-error TS(7006) FIXME: Parameter 'link' implicitly has an 'any' type. */}\n          {navigationLinks.map((link) => [\n            <SidebarListItem\n              isSelected={link.id === route}\n              key={link.name}\n              level={link.level}\n              onClick={() => this.toggleNavigationLink(link)}\n            >\n              <SidebarListItemLink\n                data-is-selected={link.id === route}\n                to={`/${link.parentName}/${link.id}`}\n              >\n                {link.name}\n              </SidebarListItemLink>\n              {link.isExpanded ? (\n                <IconDown color=\"gray\" size=\"large\" />\n              ) : (\n                <IconUp\n                  color=\"gray\"\n                  size=\"large\"\n                  onClick={() => this.toggleNavigationLink(link)}\n                />\n              )}\n            </SidebarListItem>,\n            // we want to exclude children with the same name as the parent\n            // no need to show those as those can be accesses by clicking on the parent\n            link.children && link.isExpanded\n              ? // @ts-expect-error TS(7006) FIXME: Parameter 'child' implicitly has an 'any' type.\n                link.children.map((child) =>\n                  child.fileName !== child.parentName ? (\n                    <SidebarListItem\n                      isChild\n                      isSelected={child.id === route}\n                      key={child.name}\n                      level={child.level}\n                    >\n                      <SidebarListItemLink\n                        data-is-child\n                        data-is-selected={child.id === route}\n                        to={`/${child.parentName}/${child.id}`}\n                      >\n                        {child.name}\n                      </SidebarListItemLink>\n                    </SidebarListItem>\n                  ) : null,\n                )\n              : null,\n          ])}\n        </SidebarList>\n      </SidebarWrapper>\n    )\n  }\n}\n\n// @ts-expect-error TS(2339) FIXME: Property 'propTypes' does not exist on type 'typeo... Remove this comment to see the full error message\nSidebar.propTypes = {\n  /** Navigation links to display in the sidebar */\n  navigationLinks: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n    }),\n  ).isRequired,\n  route: PropTypes.string.isRequired,\n}\n\nexport default Sidebar\n"]}