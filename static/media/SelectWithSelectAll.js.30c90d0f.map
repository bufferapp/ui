{"version":3,"file":"SelectWithSelectAll.js","sourceRoot":"","sources":["../../../../src/documentation/examples/Select/SelectWithSelectAll.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AAEvC,OAAO,MAAM,MAAM,sBAAsB,CAAA;AAEzC,MAAM,IAAI,GAAG;IACX,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC3C,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC5C,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC3C,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC5C,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE;CAC5C,CAAA;AAGD,MAAM,CAAC,OAAO,UAAU,0BAA0B;IAChD,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAA;IAGxC,MAAM,WAAW,GAAG,CAAC,MAAM,EAAE,EAAE;QAE7B,IAAI,MAAM,CAAC,IAAI,KAAK,KAAK,EAAE;YACzB,MAAM,gBAAgB,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAA;YACvE,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,iCAAM,IAAI,KAAE,QAAQ,EAAE,gBAAgB,IAAG,CAAC,CAAC,CAAA;SACzE;aAAM;YAEL,QAAQ,CACN,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;gBACjB,IAAI,IAAI,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG;oBACzB,uCAAY,IAAI,KAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,IAAE;gBAC9C,OAAO,IAAI,CAAA;YACb,CAAC,CAAC,CACH,CAAA;SACF;IACH,CAAC,CAAA;IAGD,MAAM,cAAc,GAAG;QACrB,GAAG,EAAE,GAAG;QACR,IAAI,EAAE,KAAK;QACX,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC;KACxD,CAAA;IAED,OAAO,CACL,oBAAC,MAAM,IAEL,aAAa,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,EAC1C,KAAK,EAAC,gBAAgB,EACtB,IAAI,EAAC,SAAS,EACd,WAAW,QACX,MAAM,EAAE;YACN,EAAE,EAAE,KAAK;YACT,KAAK,EAAE,MAAM;SACd,EACD,KAAK,EAAE,CAAC,cAAc,EAAE,GAAG,KAAK,CAAC,EACjC,iBAAiB,QACjB,gBAAgB,EAAE;YAChB,iBAAiB,EAAE,KAAK;SACzB,GACD,CACH,CAAA;AACH,CAAC","sourcesContent":["import React, { useState } from 'react'\n// @ts-expect-error TS(2307) FIXME: Cannot find module '@bufferapp/ui/Select' or its c... Remove this comment to see the full error message\nimport Select from '@bufferapp/ui/Select'\n\nconst data = [\n  { _id: '1', name: 'First', selected: true },\n  { _id: '2', name: 'Second', selected: true },\n  { _id: '3', name: 'Third', selected: true },\n  { _id: '4', name: 'Fourth', selected: true },\n  { _id: '5', name: 'Fifth', selected: true },\n]\n\n/** With Select All option */\nexport default function ExampleSelectWithSelectAll() {\n  const [items, setItems] = useState(data)\n\n  // @ts-expect-error TS(7006) FIXME: Parameter 'option' implicitly has an 'any' type.\n  const handleClick = (option) => {\n    // If 'All' item is clicked, either select or deselect all items\n    if (option.name === 'All') {\n      const newSelectedValue = !items.every((item) => item.selected === true)\n      setItems(items.map((item) => ({ ...item, selected: newSelectedValue })))\n    } else {\n      // If any other item is clicked, either select or deselect only that item\n      setItems(\n        items.map((item) => {\n          if (item._id === option._id)\n            return { ...item, selected: !item.selected }\n          return item\n        }),\n      )\n    }\n  }\n\n  // Create the 'All' item and determine whether it should be marked as selected or not\n  const allItemsOption = {\n    _id: '0',\n    name: 'All',\n    selected: items.every((item) => item.selected === true),\n  }\n\n  return (\n    <Select\n      // @ts-expect-error TS(7006) FIXME: Parameter 'item' implicitly has an 'any' type.\n      onSelectClick={(item) => handleClick(item)}\n      label=\"Try Select All\"\n      type=\"primary\"\n      multiSelect\n      keyMap={{\n        id: '_id',\n        title: 'name',\n      }}\n      items={[allItemsOption, ...items]}\n      clearSearchOnBlur\n      searchInputProps={{\n        clearSearchOnBlur: false,\n      }}\n    />\n  )\n}\n"]}