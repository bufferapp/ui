// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`jest-auto-snapshots > Notification Matches snapshot when passed all props 1`] = `
<AnimationWrapper
  align="center"
  dismissing={false}
  duration={300}
  easing="cubic-bezier(0.25, 1, 0.5, 1)"
  justify="flex-end"
  onDismiss={[MockFunction]}
  stageInAnimation={
    e {
      "id": "sc-keyframes-ciDIsA",
      "inject": [Function],
      "name": "ciDIsA",
      "rules": "
  0% {
    transform: translateY(-200px);
    opacity: 0;
  }

  100% {
    transform: translateY(0);
    opacity: 1;
  }
",
      "toString": [Function],
    }
  }
  stageOutAnimation={
    e {
      "id": "sc-keyframes-bjhQjg",
      "inject": [Function],
      "name": "bjhQjg",
      "rules": "
  0% {
    transform: scale(1) translateY(0);
    opacity: 1;
  }

  100% {
    transform: scale(1.05) translateY(-10px);
    opacity: 0;
  }
",
      "toString": [Function],
    }
  }
>
  <ForwardRef(styled.div)>
    <ForwardRef(styled.div)>
      <ForwardRef(styled.div)>
        jest-auto-snapshots String Fixture
      </ForwardRef(styled.div)>
      <ForwardRef(Styled(CrossIcon))
        onClick={[Function]}
      />
    </ForwardRef(styled.div)>
    <ForwardRef(styled.div)>
      <ForwardRef(Styled(Button))
        label="jest-auto-snapshots String Fixture"
        onClick={[MockFunction]}
        type="text"
      />
      <ForwardRef(Styled(Button))
        label="jest-auto-snapshots String Fixture"
        onClick={[MockFunction]}
        type="text"
      />
    </ForwardRef(styled.div)>
  </ForwardRef(styled.div)>
</AnimationWrapper>
`;

exports[`jest-auto-snapshots > Notification Matches snapshot when passed only required props 1`] = `
<AnimationWrapper
  align="center"
  dismissing={false}
  duration={300}
  easing="cubic-bezier(0.25, 1, 0.5, 1)"
  justify="flex-end"
  onDismiss={[MockFunction]}
  stageInAnimation={
    e {
      "id": "sc-keyframes-ciDIsA",
      "inject": [Function],
      "name": "ciDIsA",
      "rules": "
  0% {
    transform: translateY(-200px);
    opacity: 0;
  }

  100% {
    transform: translateY(0);
    opacity: 1;
  }
",
      "toString": [Function],
    }
  }
  stageOutAnimation={
    e {
      "id": "sc-keyframes-bjhQjg",
      "inject": [Function],
      "name": "bjhQjg",
      "rules": "
  0% {
    transform: scale(1) translateY(0);
    opacity: 1;
  }

  100% {
    transform: scale(1.05) translateY(-10px);
    opacity: 0;
  }
",
      "toString": [Function],
    }
  }
>
  <ForwardRef(styled.div)>
    <ForwardRef(styled.div)>
      <ForwardRef(styled.div)>
        jest-auto-snapshots String Fixture
      </ForwardRef(styled.div)>
      <ForwardRef(Styled(CrossIcon))
        onClick={[Function]}
      />
    </ForwardRef(styled.div)>
  </ForwardRef(styled.div)>
</AnimationWrapper>
`;
